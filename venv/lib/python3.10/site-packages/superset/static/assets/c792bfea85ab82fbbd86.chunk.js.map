{"version":3,"file":"c792bfea85ab82fbbd86.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/react-ultimate-pagination/lib/react-ultimate-pagination.js","webpack://superset/./src/components/AuditInfo/index.tsx","webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/TableView/TableView.tsx","webpack://superset/./src/features/datasets/DuplicateDatasetModal.tsx","webpack://superset/./src/pages/DatasetList/index.tsx","webpack://superset/./src/utils/getOwnerName.ts","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination-constants.js","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination-item-factories.js","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination-utils.js","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ITEM_TYPES = exports.createUltimatePagination = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ultimatePagination = require('ultimate-pagination');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar renderItemComponentFunctionFactory = function renderItemComponentFunctionFactory(itemTypeToComponent, currentPage, onChange) {\n  var onItemClickFunctionFactory = function onItemClickFunctionFactory(_ref) {\n    var value = _ref.value,\n        isDisabled = _ref.isDisabled;\n\n    return function () {\n      if (!isDisabled && onChange && currentPage !== value) {\n        onChange(value);\n      }\n    };\n  };\n\n  return function (props) {\n    var ItemComponent = itemTypeToComponent[props.type];\n    var onItemClick = onItemClickFunctionFactory(props);\n    return _react2.default.createElement(ItemComponent, _extends({ onClick: onItemClick }, props));\n  };\n};\n\nvar createUltimatePagination = function createUltimatePagination(_ref2) {\n  var itemTypeToComponent = _ref2.itemTypeToComponent,\n      _ref2$WrapperComponen = _ref2.WrapperComponent,\n      WrapperComponent = _ref2$WrapperComponen === undefined ? 'div' : _ref2$WrapperComponen;\n\n  var UltimatePaginationComponent = function UltimatePaginationComponent(props) {\n    var currentPage = props.currentPage,\n        totalPages = props.totalPages,\n        boundaryPagesRange = props.boundaryPagesRange,\n        siblingPagesRange = props.siblingPagesRange,\n        hideEllipsis = props.hideEllipsis,\n        hidePreviousAndNextPageLinks = props.hidePreviousAndNextPageLinks,\n        hideFirstAndLastPageLinks = props.hideFirstAndLastPageLinks,\n        onChange = props.onChange,\n        disabled = props.disabled,\n        restProps = _objectWithoutProperties(props, ['currentPage', 'totalPages', 'boundaryPagesRange', 'siblingPagesRange', 'hideEllipsis', 'hidePreviousAndNextPageLinks', 'hideFirstAndLastPageLinks', 'onChange', 'disabled']);\n\n    var paginationModel = (0, _ultimatePagination.getPaginationModel)({\n      currentPage: currentPage,\n      totalPages: totalPages,\n      boundaryPagesRange: boundaryPagesRange,\n      siblingPagesRange: siblingPagesRange,\n      hideEllipsis: hideEllipsis,\n      hidePreviousAndNextPageLinks: hidePreviousAndNextPageLinks,\n      hideFirstAndLastPageLinks: hideFirstAndLastPageLinks\n    });\n    var renderItemComponent = renderItemComponentFunctionFactory(itemTypeToComponent, currentPage, onChange);\n    return _react2.default.createElement(\n      WrapperComponent,\n      restProps,\n      paginationModel.map(function (itemModel) {\n        return renderItemComponent(_extends({}, itemModel, {\n          isDisabled: !!disabled\n        }));\n      })\n    );\n  };\n\n  UltimatePaginationComponent.propTypes = {\n    currentPage: _propTypes2.default.number.isRequired,\n    totalPages: _propTypes2.default.number.isRequired,\n    boundaryPagesRange: _propTypes2.default.number,\n    siblingPagesRange: _propTypes2.default.number,\n    hideEllipsis: _propTypes2.default.bool,\n    hidePreviousAndNextPageLinks: _propTypes2.default.bool,\n    hideFirstAndLastPageLinks: _propTypes2.default.bool,\n    onChange: _propTypes2.default.func,\n    disabled: _propTypes2.default.bool\n  };\n\n  return UltimatePaginationComponent;\n};\n\nexports.createUltimatePagination = createUltimatePagination;\nexports.ITEM_TYPES = _ultimatePagination.ITEM_TYPES;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport Owner from 'src/types/Owner';\nimport { Tooltip } from 'src/components/Tooltip';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { t } from '@superset-ui/core';\n\nexport type ModifiedInfoProps = {\n  user?: Owner;\n  date: string;\n};\n\nexport const ModifiedInfo = ({ user, date }: ModifiedInfoProps) => {\n  const dateSpan = (\n    <span className=\"no-wrap\" data-test=\"audit-info-date\">\n      {date}\n    </span>\n  );\n\n  if (user) {\n    const userName = getOwnerName(user);\n    const title = t('Modified by: %s', userName);\n    return (\n      <Tooltip title={title} placement=\"bottom\">\n        {dateSpan}\n      </Tooltip>\n    );\n  }\n  return dateSpan;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n  sshTunnelPasswordFields?: string[];\n  setSSHTunnelPasswordFields?: (sshTunnelPasswordFields: string[]) => void;\n  sshTunnelPrivateKeyFields?: string[];\n  setSSHTunnelPrivateKeyFields?: (sshTunnelPrivateKeyFields: string[]) => void;\n  sshTunnelPrivateKeyPasswordFields?: string[];\n  setSSHTunnelPrivateKeyPasswordFields?: (\n    sshTunnelPrivateKeyPasswordFields: string[],\n  ) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n  sshTunnelPasswordFields = [],\n  setSSHTunnelPasswordFields = () => {},\n  sshTunnelPrivateKeyFields = [],\n  setSSHTunnelPrivateKeyFields = () => {},\n  sshTunnelPrivateKeyPasswordFields = [],\n  setSSHTunnelPrivateKeyPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [sshTunnelPasswords, setSSHTunnelPasswords] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeys, setSSHTunnelPrivateKeys] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeyPasswords, setSSHTunnelPrivateKeyPasswords] =\n    useState<Record<string, string>>({});\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n    setSSHTunnelPasswordFields([]);\n    setSSHTunnelPrivateKeyFields([]);\n    setSSHTunnelPrivateKeyPasswordFields([]);\n    setSSHTunnelPasswords({});\n    setSSHTunnelPrivateKeys({});\n    setSSHTunnelPrivateKeyPasswords({});\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      sshPasswordNeeded,\n      sshPrivateKeyNeeded,\n      sshPrivateKeyPasswordNeeded,\n    },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  useEffect(() => {\n    setSSHTunnelPasswordFields(sshPasswordNeeded);\n    if (sshPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPasswordNeeded, setSSHTunnelPasswordFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyFields(sshPrivateKeyNeeded);\n    if (sshPrivateKeyNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyNeeded, setSSHTunnelPrivateKeyFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyPasswordFields(sshPrivateKeyPasswordNeeded);\n    if (sshPrivateKeyPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyPasswordNeeded, setSSHTunnelPrivateKeyPasswordFields]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      sshTunnelPasswords,\n      sshTunnelPrivateKeys,\n      sshTunnelPrivateKeyPasswords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (\n      passwordFields.length === 0 &&\n      sshTunnelPasswordFields.length === 0 &&\n      sshTunnelPrivateKeyFields.length === 0 &&\n      sshTunnelPrivateKeyPasswordFields.length === 0\n    ) {\n      return null;\n    }\n\n    const files = [\n      ...new Set([\n        ...passwordFields,\n        ...sshTunnelPasswordFields,\n        ...sshTunnelPrivateKeyFields,\n        ...sshTunnelPrivateKeyPasswordFields,\n      ]),\n    ];\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {files.map(fileName => (\n          <>\n            {passwordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`password-${fileName}`}\n                  autoComplete={`password-${fileName}`}\n                  type=\"password\"\n                  value={passwords[fileName]}\n                  onChange={event =>\n                    setPasswords({\n                      ...passwords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`ssh_tunnel_password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPasswords({\n                      ...sshTunnelPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_password\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <textarea\n                  name={`ssh_tunnel_private_key-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key-${fileName}`}\n                  value={sshTunnelPrivateKeys[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeys({\n                      ...sshTunnelPrivateKeys,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key_password-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_private_key_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPrivateKeyPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeyPasswords({\n                      ...sshTunnelPrivateKeyPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key_password\"\n                />\n              </StyledInputContainer>\n            )}\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={\n            passwordFields.length > 0 ||\n            sshTunnelPasswordFields.length > 0 ||\n            sshTunnelPrivateKeyFields.length > 0 ||\n            sshTunnelPrivateKeyPasswordFields.length > 0\n          }\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef } from 'react';\nimport { isEqual } from 'lodash';\nimport { styled, t } from '@superset-ui/core';\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\nimport { Empty } from 'src/components';\nimport Pagination from 'src/components/Pagination';\nimport TableCollection from 'src/components/TableCollection';\nimport { SortByType, ServerPagination } from './types';\n\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport enum EmptyWrapperType {\n  Default = 'Default',\n  Small = 'Small',\n}\n\nexport interface TableViewProps {\n  columns: any[];\n  data: any[];\n  pageSize?: number;\n  totalCount?: number;\n  serverPagination?: boolean;\n  onServerPagination?: (args: ServerPagination) => void;\n  initialPageIndex?: number;\n  initialSortBy?: SortByType;\n  loading?: boolean;\n  withPagination?: boolean;\n  emptyWrapperType?: EmptyWrapperType;\n  noDataText?: string;\n  className?: string;\n  isPaginationSticky?: boolean;\n  showRowCount?: boolean;\n  scrollTable?: boolean;\n  scrollTopOnPagination?: boolean;\n  small?: boolean;\n  columnsForWrapText?: string[];\n}\n\nconst EmptyWrapper = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 40}px 0;\n`;\n\nconst TableViewStyles = styled.div<{\n  isPaginationSticky?: boolean;\n  scrollTable?: boolean;\n  small?: boolean;\n}>`\n  ${({ scrollTable, theme }) =>\n    scrollTable &&\n    `\n    flex: 1 1 auto;\n    margin-bottom: ${theme.gridUnit * 4}px;\n    overflow: auto;\n  `}\n\n  .table-row {\n    ${({ theme, small }) => !small && `height: ${theme.gridUnit * 11 - 1}px;`}\n\n    .table-cell {\n      ${({ theme, small }) =>\n        small &&\n        `\n        padding-top: ${theme.gridUnit + 1}px;\n        padding-bottom: ${theme.gridUnit + 1}px;\n        line-height: 1.45;\n      `}\n    }\n  }\n\n  th[role='columnheader'] {\n    z-index: 1;\n    border-bottom: ${({ theme }) =>\n      `${theme.gridUnit - 2}px solid ${theme.colors.grayscale.light2}`};\n    ${({ small }) => small && `padding-bottom: 0;`}\n  }\n`;\n\nconst PaginationStyles = styled.div<{\n  isPaginationSticky?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  ${({ isPaginationSticky }) =>\n    isPaginationSticky &&\n    `\n        position: sticky;\n        bottom: 0;\n        left: 0;\n    `};\n\n  .row-count-container {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nconst TableView = ({\n  columns,\n  data,\n  pageSize: initialPageSize,\n  totalCount = data.length,\n  initialPageIndex,\n  initialSortBy = [],\n  loading = false,\n  withPagination = true,\n  emptyWrapperType = EmptyWrapperType.Default,\n  noDataText,\n  showRowCount = true,\n  serverPagination = false,\n  columnsForWrapText,\n  onServerPagination = () => {},\n  scrollTopOnPagination = false,\n  ...props\n}: TableViewProps) => {\n  const initialState = {\n    pageSize: initialPageSize ?? DEFAULT_PAGE_SIZE,\n    pageIndex: initialPageIndex ?? 0,\n    sortBy: initialSortBy,\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    rows,\n    prepareRow,\n    pageCount,\n    gotoPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState,\n      manualPagination: serverPagination,\n      manualSortBy: serverPagination,\n      pageCount: Math.ceil(totalCount / initialState.pageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n  );\n\n  const content = withPagination ? page : rows;\n\n  let EmptyWrapperComponent;\n  switch (emptyWrapperType) {\n    case EmptyWrapperType.Small:\n      EmptyWrapperComponent = ({ children }: any) => <>{children}</>;\n      break;\n    case EmptyWrapperType.Default:\n    default:\n      EmptyWrapperComponent = ({ children }: any) => (\n        <EmptyWrapper>{children}</EmptyWrapper>\n      );\n  }\n\n  const isEmpty = !loading && content.length === 0;\n  const hasPagination = pageCount > 1 && withPagination;\n  const tableRef = useRef<HTMLTableElement>(null);\n  const handleGotoPage = (p: number) => {\n    if (scrollTopOnPagination) {\n      tableRef?.current?.scroll(0, 0);\n    }\n    gotoPage(p);\n  };\n\n  useEffect(() => {\n    if (serverPagination && pageIndex !== initialState.pageIndex) {\n      onServerPagination({\n        pageIndex,\n      });\n    }\n  }, [pageIndex]);\n\n  useEffect(() => {\n    if (serverPagination && !isEqual(sortBy, initialState.sortBy)) {\n      onServerPagination({\n        pageIndex: 0,\n        sortBy,\n      });\n    }\n  }, [sortBy]);\n\n  return (\n    <>\n      <TableViewStyles {...props} ref={tableRef}>\n        <TableCollection\n          getTableProps={getTableProps}\n          getTableBodyProps={getTableBodyProps}\n          prepareRow={prepareRow}\n          headerGroups={headerGroups}\n          rows={content}\n          columns={columns}\n          loading={loading}\n          columnsForWrapText={columnsForWrapText}\n        />\n        {isEmpty && (\n          <EmptyWrapperComponent>\n            {noDataText ? (\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={noDataText}\n              />\n            ) : (\n              <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n            )}\n          </EmptyWrapperComponent>\n        )}\n      </TableViewStyles>\n      {hasPagination && (\n        <PaginationStyles\n          className=\"pagination-container\"\n          isPaginationSticky={props.isPaginationSticky}\n        >\n          <Pagination\n            totalPages={pageCount || 0}\n            currentPage={pageCount ? pageIndex + 1 : 0}\n            onChange={(p: number) => handleGotoPage(p - 1)}\n            hideFirstAndLastPageLinks\n          />\n          {showRowCount && (\n            <div className=\"row-count-container\">\n              {!loading &&\n                t(\n                  '%s-%s of %s',\n                  pageSize * pageIndex + (page.length && 1),\n                  pageSize * pageIndex + page.length,\n                  totalCount,\n                )}\n            </div>\n          )}\n        </PaginationStyles>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(TableView);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { FormLabel } from 'src/components/Form';\nimport { Input } from 'src/components/Input';\nimport Modal from 'src/components/Modal';\nimport Dataset from 'src/types/Dataset';\n\ninterface DuplicateDatasetModalProps {\n  dataset: Dataset | null;\n  onHide: () => void;\n  onDuplicate: (newDatasetName: string) => void;\n}\n\nconst DuplicateDatasetModal: FunctionComponent<DuplicateDatasetModalProps> = ({\n  dataset,\n  onHide,\n  onDuplicate,\n}) => {\n  const [show, setShow] = useState<boolean>(false);\n  const [disableSave, setDisableSave] = useState<boolean>(false);\n  const [newDuplicateDatasetName, setNewDuplicateDatasetName] =\n    useState<string>('');\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = event.target.value ?? '';\n    setNewDuplicateDatasetName(targetValue);\n    setDisableSave(targetValue === '');\n  };\n\n  const duplicateDataset = () => {\n    onDuplicate(newDuplicateDatasetName);\n  };\n\n  useEffect(() => {\n    setNewDuplicateDatasetName('');\n    setShow(dataset !== null);\n  }, [dataset]);\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      title={t('Duplicate dataset')}\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={duplicateDataset}\n      primaryButtonName={t('Duplicate')}\n    >\n      <FormLabel htmlFor=\"duplicate\">{t('New dataset name')}</FormLabel>\n      <Input\n        data-test=\"duplicate-modal-input\"\n        type=\"text\"\n        id=\"duplicate\"\n        autoComplete=\"off\"\n        value={newDuplicateDatasetName}\n        onChange={onChange}\n        onPressEnter={duplicateDataset}\n      />\n    </Modal>\n  );\n};\n\nexport default DuplicateDatasetModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  getExtensionsRegistry,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport React, {\n  FunctionComponent,\n  useState,\n  useMemo,\n  useCallback,\n} from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport rison from 'rison';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n} from 'src/views/CRUD/utils';\nimport { ColumnObject } from 'src/features/datasets/types';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { DatasourceModal } from 'src/components/Datasource';\nimport DeleteModal from 'src/components/DeleteModal';\nimport handleResourceExport from 'src/utils/export';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport SubMenu, { SubMenuProps, ButtonProps } from 'src/features/home/SubMenu';\nimport Owner from 'src/types/Owner';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport FacePile from 'src/components/FacePile';\nimport CertifiedBadge from 'src/components/CertifiedBadge';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport { GenericLink } from 'src/components/GenericLink/GenericLink';\n\nimport {\n  PAGE_SIZE,\n  SORT_BY,\n  PASSWORDS_NEEDED_MESSAGE,\n  CONFIRM_OVERWRITE_MESSAGE,\n} from 'src/features/datasets/constants';\nimport DuplicateDatasetModal from 'src/features/datasets/DuplicateDatasetModal';\nimport { useSelector } from 'react-redux';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\nconst DatasetDeleteRelatedExtension = extensionsRegistry.get(\n  'dataset.delete.related',\n);\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n\n  .disabled {\n    svg,\n    i {\n      &:hover {\n        path {\n          fill: ${({ theme }) => theme.colors.grayscale.light1};\n        }\n      }\n    }\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    .ant-menu-item:hover {\n      color: ${({ theme }) => theme.colors.grayscale.light1};\n      cursor: default;\n    }\n    &::after {\n      color: ${({ theme }) => theme.colors.grayscale.light1};\n    }\n  }\n`;\n\ntype Dataset = {\n  changed_by_name: string;\n  changed_by: string;\n  changed_on_delta_humanized: string;\n  database: {\n    id: string;\n    database_name: string;\n  };\n  kind: string;\n  explore_url: string;\n  id: number;\n  owners: Array<Owner>;\n  schema: string;\n  table_name: string;\n};\n\ninterface VirtualDataset extends Dataset {\n  extra: Record<string, any>;\n  sql: string;\n}\n\ninterface DatasetListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst DatasetList: FunctionComponent<DatasetListProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}) => {\n  const history = useHistory();\n  const {\n    state: {\n      loading,\n      resourceCount: datasetCount,\n      resourceCollection: datasets,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Dataset>('dataset', t('dataset'), addDangerToast);\n\n  const [datasetCurrentlyDeleting, setDatasetCurrentlyDeleting] = useState<\n    (Dataset & { chart_count: number; dashboard_count: number }) | null\n  >(null);\n\n  const [datasetCurrentlyEditing, setDatasetCurrentlyEditing] =\n    useState<Dataset | null>(null);\n\n  const [datasetCurrentlyDuplicating, setDatasetCurrentlyDuplicating] =\n    useState<VirtualDataset | null>(null);\n\n  const [importingDataset, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n\n  const PREVENT_UNSAFE_DEFAULT_URLS_ON_DATASET = useSelector<any, boolean>(\n    state =>\n      state.common?.conf?.PREVENT_UNSAFE_DEFAULT_URLS_ON_DATASET || false,\n  );\n\n  const openDatasetImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeDatasetImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleDatasetImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Dataset imported'));\n  };\n\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n  const canDuplicate = hasPerm('can_duplicate');\n  const canExport = hasPerm('can_export');\n\n  const initialSort = SORT_BY;\n\n  const openDatasetEditModal = useCallback(\n    ({ id }: Dataset) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/dataset/${id}`,\n      })\n        .then(({ json = {} }) => {\n          const addCertificationFields = json.result.columns.map(\n            (column: ColumnObject) => {\n              const {\n                certification: { details = '', certified_by = '' } = {},\n              } = JSON.parse(column.extra || '{}') || {};\n              return {\n                ...column,\n                certification_details: details || '',\n                certified_by: certified_by || '',\n                is_certified: details || certified_by,\n              };\n            },\n          );\n          // eslint-disable-next-line no-param-reassign\n          json.result.columns = [...addCertificationFields];\n          setDatasetCurrentlyEditing(json.result);\n        })\n        .catch(() => {\n          addDangerToast(\n            t('An error occurred while fetching dataset related data'),\n          );\n        });\n    },\n    [addDangerToast],\n  );\n\n  const openDatasetDeleteModal = (dataset: Dataset) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/dataset/${dataset.id}/related_objects`,\n    })\n      .then(({ json = {} }) => {\n        setDatasetCurrentlyDeleting({\n          ...dataset,\n          chart_count: json.charts.count,\n          dashboard_count: json.dashboards.count,\n        });\n      })\n      .catch(\n        createErrorHandler(errMsg =>\n          t(\n            'An error occurred while fetching dataset related data: %s',\n            errMsg,\n          ),\n        ),\n      );\n\n  const openDatasetDuplicateModal = (dataset: VirtualDataset) => {\n    setDatasetCurrentlyDuplicating(dataset);\n  };\n\n  const handleBulkDatasetExport = (datasetsToExport: Dataset[]) => {\n    const ids = datasetsToExport.map(({ id }) => id);\n    handleResourceExport('dataset', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { kind },\n          },\n        }: any) => {\n          if (kind === 'physical') {\n            return (\n              <Tooltip\n                id=\"physical-dataset-tooltip\"\n                title={t('Physical dataset')}\n              >\n                <Icons.DatasetPhysical />\n              </Tooltip>\n            );\n          }\n\n          return (\n            <Tooltip id=\"virtual-dataset-tooltip\" title={t('Virtual dataset')}>\n              <Icons.DatasetVirtual />\n            </Tooltip>\n          );\n        },\n        accessor: 'kind_icon',\n        disableSortBy: true,\n        size: 'xs',\n        id: 'id',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              extra,\n              table_name: datasetTitle,\n              description,\n              explore_url: exploreURL,\n            },\n          },\n        }: any) => {\n          let titleLink: JSX.Element;\n          if (PREVENT_UNSAFE_DEFAULT_URLS_ON_DATASET) {\n            titleLink = (\n              <Link data-test=\"internal-link\" to={exploreURL}>\n                {datasetTitle}\n              </Link>\n            );\n          } else {\n            titleLink = (\n              // exploreUrl can be a link to Explore or an external link\n              // in the first case use SPA routing, else use HTML anchor\n              <GenericLink to={exploreURL}>{datasetTitle}</GenericLink>\n            );\n          }\n          try {\n            const parsedExtra = JSON.parse(extra);\n            return (\n              <FlexRowContainer>\n                {parsedExtra?.certification && (\n                  <CertifiedBadge\n                    certifiedBy={parsedExtra.certification.certified_by}\n                    details={parsedExtra.certification.details}\n                    size=\"l\"\n                  />\n                )}\n                {parsedExtra?.warning_markdown && (\n                  <WarningIconWithTooltip\n                    warningMarkdown={parsedExtra.warning_markdown}\n                    size=\"l\"\n                  />\n                )}\n                {titleLink}\n                {description && <InfoTooltip tooltip={description} />}\n              </FlexRowContainer>\n            );\n          } catch {\n            return titleLink;\n          }\n        },\n        Header: t('Name'),\n        accessor: 'table_name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { kind },\n          },\n        }: any) => (kind === 'physical' ? t('Physical') : t('Virtual')),\n        Header: t('Type'),\n        accessor: 'kind',\n        disableSortBy: true,\n        size: 'md',\n      },\n      {\n        Header: t('Database'),\n        accessor: 'database.database_name',\n        size: 'lg',\n      },\n      {\n        Header: t('Schema'),\n        accessor: 'schema',\n        size: 'lg',\n      },\n      {\n        accessor: 'database',\n        disableSortBy: true,\n        hidden: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        id: 'owners',\n        disableSortBy: true,\n        size: 'lg',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        accessor: 'sql',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          // Verify owner or isAdmin\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          const handleEdit = () => openDatasetEditModal(original);\n          const handleDelete = () => openDatasetDeleteModal(original);\n          const handleExport = () => handleBulkDatasetExport([original]);\n          const handleDuplicate = () => openDatasetDuplicateModal(original);\n          if (!canEdit && !canDelete && !canExport && !canDuplicate) {\n            return null;\n          }\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <Tooltip\n                  id=\"delete-action-tooltip\"\n                  title={t('Delete')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleDelete}\n                  >\n                    <Icons.Trash />\n                  </span>\n                </Tooltip>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={\n                    allowEdit\n                      ? t('Edit')\n                      : t(\n                          'You must be a dataset owner in order to edit. Please reach out to a dataset owner to request modifications or edit access.',\n                        )\n                  }\n                  placement=\"bottomRight\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className={allowEdit ? 'action-button' : 'disabled'}\n                    onClick={allowEdit ? handleEdit : undefined}\n                  >\n                    <Icons.EditAlt />\n                  </span>\n                </Tooltip>\n              )}\n              {canDuplicate && original.kind === 'virtual' && (\n                <Tooltip\n                  id=\"duplicate-action-tooltop\"\n                  title={t('Duplicate')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleDuplicate}\n                  >\n                    <Icons.Copy />\n                  </span>\n                </Tooltip>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete && !canDuplicate,\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [canEdit, canDelete, canExport, openDatasetEditModal, canDuplicate, user],\n  );\n\n  const filterTypes: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'table_name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Type'),\n        key: 'sql',\n        id: 'sql',\n        input: 'select',\n        operator: FilterOperator.DatasetIsNullOrEmpty,\n        unfilteredLabel: 'All',\n        selects: [\n          { label: t('Virtual'), value: false },\n          { label: t('Physical'), value: true },\n        ],\n      },\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'dataset',\n          'database',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching datasets: %s', errMsg),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Schema'),\n        key: 'schema',\n        id: 'schema',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'dataset',\n          'schema',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching schema values: %s', errMsg),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'dataset',\n          'owners',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset owner values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Certified'),\n        key: 'certified',\n        id: 'id',\n        urlDisplay: 'certified',\n        input: 'select',\n        operator: FilterOperator.DatasetIsCertified,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'dataset',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [user],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Datasets',\n    name: t('Datasets'),\n  };\n\n  const buttonArr: Array<ButtonProps> = [];\n\n  if (canDelete || canExport) {\n    buttonArr.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  if (canCreate) {\n    buttonArr.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Dataset')}{' '}\n        </>\n      ),\n      onClick: () => {\n        history.push('/dataset/add/');\n      },\n      buttonStyle: 'primary',\n    });\n\n    buttonArr.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import datasets')}\n          placement=\"bottomRight\"\n        >\n          <Icons.Import data-test=\"import-button\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openDatasetImportModal,\n    });\n  }\n\n  menuData.buttons = buttonArr;\n\n  const closeDatasetDeleteModal = () => {\n    setDatasetCurrentlyDeleting(null);\n  };\n\n  const closeDatasetEditModal = () => {\n    setDatasetCurrentlyEditing(null);\n  };\n\n  const closeDatasetDuplicateModal = () => {\n    setDatasetCurrentlyDuplicating(null);\n  };\n\n  const handleDatasetDelete = ({ id, table_name: tableName }: Dataset) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/dataset/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setDatasetCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', tableName));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', tableName, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkDatasetDelete = (datasetsToDelete: Dataset[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/dataset/?q=${rison.encode(\n        datasetsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected datasets: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleDatasetDuplicate = (newDatasetName: string) => {\n    if (datasetCurrentlyDuplicating === null) {\n      addDangerToast(t('There was an issue duplicating the dataset.'));\n    }\n\n    SupersetClient.post({\n      endpoint: `/api/v1/dataset/duplicate`,\n      jsonPayload: {\n        base_model_id: datasetCurrentlyDuplicating?.id,\n        table_name: newDatasetName,\n      },\n    }).then(\n      () => {\n        setDatasetCurrentlyDuplicating(null);\n        refreshData();\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue duplicating the selected datasets: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {datasetCurrentlyDeleting && (\n        <DeleteModal\n          description={\n            <>\n              <p>\n                {t(\n                  'The dataset %s is linked to %s charts that appear on %s dashboards. Are you sure you want to continue? Deleting the dataset will break those objects.',\n                  datasetCurrentlyDeleting.table_name,\n                  datasetCurrentlyDeleting.chart_count,\n                  datasetCurrentlyDeleting.dashboard_count,\n                )}\n              </p>\n              {DatasetDeleteRelatedExtension && (\n                <DatasetDeleteRelatedExtension\n                  dataset={datasetCurrentlyDeleting}\n                />\n              )}\n            </>\n          }\n          onConfirm={() => {\n            if (datasetCurrentlyDeleting) {\n              handleDatasetDelete(datasetCurrentlyDeleting);\n            }\n          }}\n          onHide={closeDatasetDeleteModal}\n          open\n          title={t('Delete Dataset?')}\n        />\n      )}\n      {datasetCurrentlyEditing && (\n        <DatasourceModal\n          datasource={datasetCurrentlyEditing}\n          onDatasourceSave={refreshData}\n          onHide={closeDatasetEditModal}\n          show\n        />\n      )}\n      <DuplicateDatasetModal\n        dataset={datasetCurrentlyDuplicating}\n        onHide={closeDatasetDuplicateModal}\n        onDuplicate={handleDatasetDuplicate}\n      />\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected datasets?',\n        )}\n        onConfirm={handleBulkDatasetDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkDatasetExport,\n            });\n          }\n          return (\n            <ListView<Dataset>\n              className=\"dataset-list-view\"\n              columns={columns}\n              data={datasets}\n              count={datasetCount}\n              pageSize={PAGE_SIZE}\n              fetchData={fetchData}\n              filters={filterTypes}\n              loading={loading}\n              initialSort={initialSort}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              refreshData={refreshData}\n              renderBulkSelectCopy={selected => {\n                const { virtualCount, physicalCount } = selected.reduce(\n                  (acc, e) => {\n                    if (e.original.kind === 'physical') acc.physicalCount += 1;\n                    else if (e.original.kind === 'virtual') {\n                      acc.virtualCount += 1;\n                    }\n                    return acc;\n                  },\n                  { virtualCount: 0, physicalCount: 0 },\n                );\n\n                if (!selected.length) {\n                  return t('0 Selected');\n                }\n                if (virtualCount && !physicalCount) {\n                  return t(\n                    '%s Selected (Virtual)',\n                    selected.length,\n                    virtualCount,\n                  );\n                }\n                if (physicalCount && !virtualCount) {\n                  return t(\n                    '%s Selected (Physical)',\n                    selected.length,\n                    physicalCount,\n                  );\n                }\n\n                return t(\n                  '%s Selected (%s Physical, %s Virtual)',\n                  selected.length,\n                  physicalCount,\n                  virtualCount,\n                );\n              }}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"dataset\"\n        resourceLabel={t('dataset')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleDatasetImport}\n        show={importingDataset}\n        onHide={closeDatasetImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n};\n\nexport default withToasts(DatasetList);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n","\"use strict\";\nexports.ITEM_TYPES = {\n    PAGE: 'PAGE',\n    ELLIPSIS: 'ELLIPSIS',\n    FIRST_PAGE_LINK: 'FIRST_PAGE_LINK',\n    PREVIOUS_PAGE_LINK: 'PREVIOUS_PAGE_LINK',\n    NEXT_PAGE_LINK: 'NEXT_PAGE_LINK',\n    LAST_PAGE_LINK: 'LAST_PAGE_LINK'\n};\nexports.ITEM_KEYS = {\n    FIRST_ELLIPSIS: -1,\n    SECOND_ELLIPSIS: -2,\n    FIRST_PAGE_LINK: -3,\n    PREVIOUS_PAGE_LINK: -4,\n    NEXT_PAGE_LINK: -5,\n    LAST_PAGE_LINK: -6\n};\n//# sourceMappingURL=ultimate-pagination-constants.js.map","\"use strict\";\nvar ultimate_pagination_constants_1 = require(\"./ultimate-pagination-constants\");\nexports.createFirstEllipsis = function (pageNumber) {\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.ELLIPSIS,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.FIRST_ELLIPSIS,\n        value: pageNumber,\n        isActive: false\n    };\n};\nexports.createSecondEllipsis = function (pageNumber) {\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.ELLIPSIS,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.SECOND_ELLIPSIS,\n        value: pageNumber,\n        isActive: false\n    };\n};\nexports.createFirstPageLink = function (options) {\n    var currentPage = options.currentPage;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.FIRST_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.FIRST_PAGE_LINK,\n        value: 1,\n        isActive: currentPage === 1\n    };\n};\nexports.createPreviousPageLink = function (options) {\n    var currentPage = options.currentPage;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.PREVIOUS_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.PREVIOUS_PAGE_LINK,\n        value: Math.max(1, currentPage - 1),\n        isActive: currentPage === 1\n    };\n};\nexports.createNextPageLink = function (options) {\n    var currentPage = options.currentPage, totalPages = options.totalPages;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.NEXT_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.NEXT_PAGE_LINK,\n        value: Math.min(totalPages, currentPage + 1),\n        isActive: currentPage === totalPages\n    };\n};\nexports.createLastPageLink = function (options) {\n    var currentPage = options.currentPage, totalPages = options.totalPages;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.LAST_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.LAST_PAGE_LINK,\n        value: totalPages,\n        isActive: currentPage === totalPages\n    };\n};\nexports.createPageFunctionFactory = function (options) {\n    var currentPage = options.currentPage;\n    return function (pageNumber) {\n        return {\n            type: ultimate_pagination_constants_1.ITEM_TYPES.PAGE,\n            key: pageNumber,\n            value: pageNumber,\n            isActive: pageNumber === currentPage\n        };\n    };\n};\n//# sourceMappingURL=ultimate-pagination-item-factories.js.map","\"use strict\";\nfunction createRange(start, end) {\n    var range = [];\n    for (var i = start; i <= end; i++) {\n        range.push(i);\n    }\n    return range;\n}\nexports.createRange = createRange;\n//# sourceMappingURL=ultimate-pagination-utils.js.map","\"use strict\";\nvar ultimate_pagination_utils_1 = require(\"./ultimate-pagination-utils\");\nvar ultimate_pagination_item_factories_1 = require(\"./ultimate-pagination-item-factories\");\nfunction getPaginationModel(options) {\n    if (options == null) {\n        throw new Error('getPaginationModel(): options object should be a passed');\n    }\n    var totalPages = Number(options.totalPages);\n    if (isNaN(totalPages)) {\n        throw new Error('getPaginationModel(): totalPages should be a number');\n    }\n    if (totalPages < 0) {\n        throw new Error('getPaginationModel(): totalPages shouldn\\'t be a negative number');\n    }\n    var currentPage = Number(options.currentPage);\n    if (isNaN(currentPage)) {\n        throw new Error('getPaginationModel(): currentPage should be a number');\n    }\n    if (currentPage < 0) {\n        throw new Error('getPaginationModel(): currentPage shouldn\\'t be a negative number');\n    }\n    if (currentPage > totalPages) {\n        throw new Error('getPaginationModel(): currentPage shouldn\\'t be greater than totalPages');\n    }\n    var boundaryPagesRange = (options.boundaryPagesRange == null ? 1 : Number(options.boundaryPagesRange));\n    if (isNaN(boundaryPagesRange)) {\n        throw new Error('getPaginationModel(): boundaryPagesRange should be a number');\n    }\n    if (boundaryPagesRange < 0) {\n        throw new Error('getPaginationModel(): boundaryPagesRange shouldn\\'t be a negative number');\n    }\n    var siblingPagesRange = (options.siblingPagesRange == null ? 1 : Number(options.siblingPagesRange));\n    if (isNaN(siblingPagesRange)) {\n        throw new Error('getPaginationModel(): siblingPagesRange should be a number');\n    }\n    if (siblingPagesRange < 0) {\n        throw new Error('getPaginationModel(): siblingPagesRange shouldn\\'t be a negative number');\n    }\n    var hidePreviousAndNextPageLinks = Boolean(options.hidePreviousAndNextPageLinks);\n    var hideFirstAndLastPageLinks = Boolean(options.hideFirstAndLastPageLinks);\n    var hideEllipsis = Boolean(options.hideEllipsis);\n    var ellipsisSize = (hideEllipsis ? 0 : 1);\n    var paginationModel = [];\n    var createPage = ultimate_pagination_item_factories_1.createPageFunctionFactory(options);\n    if (!hideFirstAndLastPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createFirstPageLink(options));\n    }\n    if (!hidePreviousAndNextPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createPreviousPageLink(options));\n    }\n    // Simplify generation of pages if number of available items is equal or greater than total pages to show\n    if (1 + 2 * ellipsisSize + 2 * siblingPagesRange + 2 * boundaryPagesRange >= totalPages) {\n        var allPages = ultimate_pagination_utils_1.createRange(1, totalPages).map(createPage);\n        paginationModel.push.apply(paginationModel, allPages);\n    }\n    else {\n        // Calculate group of first pages\n        var firstPagesStart = 1;\n        var firstPagesEnd = boundaryPagesRange;\n        var firstPages = ultimate_pagination_utils_1.createRange(firstPagesStart, firstPagesEnd).map(createPage);\n        // Calculate group of last pages\n        var lastPagesStart = totalPages + 1 - boundaryPagesRange;\n        var lastPagesEnd = totalPages;\n        var lastPages = ultimate_pagination_utils_1.createRange(lastPagesStart, lastPagesEnd).map(createPage);\n        // Calculate group of main pages\n        var mainPagesStart = Math.min(Math.max(currentPage - siblingPagesRange, firstPagesEnd + ellipsisSize + 1), lastPagesStart - ellipsisSize - 2 * siblingPagesRange - 1);\n        var mainPagesEnd = mainPagesStart + 2 * siblingPagesRange;\n        var mainPages = ultimate_pagination_utils_1.createRange(mainPagesStart, mainPagesEnd).map(createPage);\n        // Add group of first pages\n        paginationModel.push.apply(paginationModel, firstPages);\n        if (!hideEllipsis) {\n            // Calculate and add ellipsis before group of main pages\n            var firstEllipsisPageNumber = mainPagesStart - 1;\n            var showPageInsteadOfFirstEllipsis = (firstEllipsisPageNumber === firstPagesEnd + 1);\n            var createFirstEllipsisOrPage = showPageInsteadOfFirstEllipsis ? createPage : ultimate_pagination_item_factories_1.createFirstEllipsis;\n            var firstEllipsis = createFirstEllipsisOrPage(firstEllipsisPageNumber);\n            paginationModel.push(firstEllipsis);\n        }\n        // Add group of main pages\n        paginationModel.push.apply(paginationModel, mainPages);\n        if (!hideEllipsis) {\n            // Calculate and add ellipsis after group of main pages\n            var secondEllipsisPageNumber = mainPagesEnd + 1;\n            var showPageInsteadOfSecondEllipsis = (secondEllipsisPageNumber === lastPagesStart - 1);\n            var createSecondEllipsisOrPage = showPageInsteadOfSecondEllipsis ? createPage : ultimate_pagination_item_factories_1.createSecondEllipsis;\n            var secondEllipsis = createSecondEllipsisOrPage(secondEllipsisPageNumber);\n            paginationModel.push(secondEllipsis);\n        }\n        // Add group of last pages\n        paginationModel.push.apply(paginationModel, lastPages);\n    }\n    if (!hidePreviousAndNextPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createNextPageLink(options));\n    }\n    if (!hideFirstAndLastPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createLastPageLink(options));\n    }\n    return paginationModel;\n}\nexports.getPaginationModel = getPaginationModel;\nvar ultimate_pagination_constants_1 = require(\"./ultimate-pagination-constants\");\nexports.ITEM_TYPES = ultimate_pagination_constants_1.ITEM_TYPES;\nexports.ITEM_KEYS = ultimate_pagination_constants_1.ITEM_KEYS;\n//# sourceMappingURL=ultimate-pagination.js.map"],"names":["exports","undefined","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react2","_interopRequireDefault","_propTypes2","_ultimatePagination","obj","__esModule","default","_ref2","itemTypeToComponent","_ref2$WrapperComponen","WrapperComponent","UltimatePaginationComponent","props","currentPage","totalPages","boundaryPagesRange","siblingPagesRange","hideEllipsis","hidePreviousAndNextPageLinks","hideFirstAndLastPageLinks","onChange","disabled","restProps","keys","indexOf","_objectWithoutProperties","paginationModel","getPaginationModel","renderItemComponent","_ref","value","isDisabled","ItemComponent","type","onItemClick","createElement","onClick","renderItemComponentFunctionFactory","map","itemModel","propTypes","number","isRequired","bool","func","ITEM_TYPES","ModifiedInfo","user","date","dateSpan","___EmotionJSX","className","userName","getOwnerName","title","t","Tooltip","placement","HelperMessage","styled","div","theme","colors","grayscale","base","typography","sizes","s","StyledInputContainer","gridUnit","light1","light2","ImportModelsModal","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","isHidden","setIsHidden","useState","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","sshTunnelPasswords","setSSHTunnelPasswords","sshTunnelPrivateKeys","setSSHTunnelPrivateKeys","sshTunnelPrivateKeyPasswords","setSSHTunnelPrivateKeyPasswords","clearModal","state","alreadyExists","passwordsNeeded","sshPasswordNeeded","sshPrivateKeyNeeded","sshPrivateKeyPasswordNeeded","importResource","useImportResource","msg","useEffect","Modal","name","disablePrimaryButton","onHandledPrimaryAction","onUpload","_fileList$","originFileObj","File","then","result","hide","primaryButtonName","primaryButtonType","width","Upload","id","accept","info","file","status","onRemove","removedFile","filter","uid","customRequest","Button","loading","ErrorAlert","showDbInstallInstructions","renderPasswordFields","files","Set","React","fileName","slice","autoComplete","event","_event$currentTarget$","_event$currentTarget","targetValue","currentTarget","toUpperCase","EmptyWrapperType","EmptyWrapper","TableViewStyles","scrollTable","small","PaginationStyles","light5","isPaginationSticky","TableView","columns","data","pageSize","initialPageSize","totalCount","initialPageIndex","initialSortBy","withPagination","emptyWrapperType","Default","noDataText","showRowCount","serverPagination","columnsForWrapText","onServerPagination","scrollTopOnPagination","initialState","pageIndex","sortBy","getTableProps","getTableBodyProps","headerGroups","page","rows","prepareRow","pageCount","gotoPage","useTable","manualPagination","manualSortBy","Math","ceil","useFilters","useSortBy","usePagination","content","EmptyWrapperComponent","Small","children","isEmpty","hasPagination","tableRef","useRef","_isEqual","ref","TableCollection","Empty","image","PRESENTED_IMAGE_SIMPLE","description","Pagination","p","handleGotoPage","_tableRef$current","current","scroll","DuplicateDatasetModal","dataset","onDuplicate","setShow","disableSave","setDisableSave","newDuplicateDatasetName","setNewDuplicateDatasetName","duplicateDataset","FormLabel","htmlFor","Input","_event$target$value","onPressEnter","DatasetDeleteRelatedExtension","getExtensionsRegistry","get","FlexRowContainer","Actions","withToasts","DatasetList","addDangerToast","addSuccessToast","history","useHistory","resourceCount","datasetCount","resourceCollection","datasets","bulkSelectEnabled","hasPerm","fetchData","toggleBulkSelect","refreshData","useListViewResource","datasetCurrentlyDeleting","setDatasetCurrentlyDeleting","datasetCurrentlyEditing","setDatasetCurrentlyEditing","datasetCurrentlyDuplicating","setDatasetCurrentlyDuplicating","importingDataset","showImportModal","preparingExport","setPreparingExport","PREVENT_UNSAFE_DEFAULT_URLS_ON_DATASET","useSelector","_state$common","_state$common$conf","common","conf","canEdit","canDelete","canCreate","canDuplicate","canExport","initialSort","SORT_BY","openDatasetEditModal","useCallback","SupersetClient","endpoint","json","addCertificationFields","column","certification","details","certified_by","JSON","parse","extra","certification_details","is_certified","catch","handleBulkDatasetExport","datasetsToExport","ids","handleResourceExport","useMemo","Cell","row","original","kind","Icons","DatasetPhysical","DatasetVirtual","accessor","disableSortBy","size","table_name","datasetTitle","explore_url","exploreURL","titleLink","Link","to","GenericLink","parsedExtra","CertifiedBadge","certifiedBy","warning_markdown","WarningIconWithTooltip","warningMarkdown","InfoTooltip","tooltip","Header","hidden","owners","FacePile","users","changed_on_delta_humanized","changedOn","changed_by","changedBy","allowEdit","o","includes","userId","isUserAdmin","role","tabIndex","handleDelete","openDatasetDeleteModal","chart_count","charts","count","dashboard_count","dashboards","createErrorHandler","errMsg","Trash","handleExport","Share","handleEdit","EditAlt","handleDuplicate","Copy","QueryObjectColumns","ChangedBy","filterTypes","input","operator","FilterOperator","Contains","DatasetIsNullOrEmpty","unfilteredLabel","selects","label","RelationOneMany","fetchSelects","createFetchRelated","paginate","Equals","createFetchDistinct","RelationManyMany","urlDisplay","DatasetIsCertified","menuData","activeChild","buttonArr","push","buttonStyle","Import","openDatasetImportModal","buttons","SubMenu","DeleteModal","onConfirm","handleDatasetDelete","tableName","delete","closeDatasetDeleteModal","open","DatasourceModal","datasource","onDatasourceSave","closeDatasetEditModal","closeDatasetDuplicateModal","newDatasetName","post","jsonPayload","base_model_id","ConfirmStatusChange","datasetsToDelete","rison","message","confirmDelete","bulkActions","onSelect","ListView","PAGE_SIZE","filters","disableBulkSelect","renderBulkSelectCopy","selected","virtualCount","physicalCount","reduce","acc","e","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","handleDatasetImport","closeDatasetImportModal","Loading","owner","first_name","last_name","PAGE","ELLIPSIS","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","NEXT_PAGE_LINK","LAST_PAGE_LINK","ITEM_KEYS","FIRST_ELLIPSIS","SECOND_ELLIPSIS","ultimate_pagination_constants_1","createFirstEllipsis","pageNumber","isActive","createSecondEllipsis","createFirstPageLink","options","createPreviousPageLink","max","createNextPageLink","min","createLastPageLink","createPageFunctionFactory","createRange","start","end","range","ultimate_pagination_utils_1","ultimate_pagination_item_factories_1","Error","Number","isNaN","Boolean","ellipsisSize","createPage","allPages","apply","firstPagesEnd","firstPages","lastPagesStart","lastPagesEnd","lastPages","mainPagesStart","mainPagesEnd","mainPages","firstEllipsisPageNumber","firstEllipsis","secondEllipsisPageNumber","secondEllipsis"],"sourceRoot":""}