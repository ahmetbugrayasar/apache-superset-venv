{"version":3,"file":"faa8ab2f84ef2d790087.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/rc-util/es/Dom/css.js","webpack://superset/./node_modules/rc-util/lib/Children/toArray.js","webpack://superset/./node_modules/rc-util/lib/Dom/addEventListener.js","webpack://superset/./node_modules/rc-util/lib/Dom/css.js","webpack://superset/./node_modules/rc-util/lib/Dom/isVisible.js","webpack://superset/./node_modules/rc-util/lib/getScrollBarSize.js","webpack://superset/./node_modules/rc-util/lib/hooks/useEvent.js","webpack://superset/./node_modules/rc-util/lib/hooks/useLayoutEffect.js","webpack://superset/./node_modules/rc-util/lib/hooks/useMergedState.js","webpack://superset/./node_modules/rc-util/lib/hooks/useState.js","webpack://superset/./node_modules/react-window/dist/index.esm.js"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nvar PIXEL_PATTERN = /margin|padding|width|height|max|min|offset/;\nvar removePixel = {\n  left: true,\n  top: true\n};\nvar floatMap = {\n  cssFloat: 1,\n  styleFloat: 1,\n  float: 1\n};\nfunction getComputedStyle(node) {\n  return node.nodeType === 1 ? node.ownerDocument.defaultView.getComputedStyle(node, null) : {};\n}\nfunction getStyleValue(node, type, value) {\n  type = type.toLowerCase();\n  if (value === 'auto') {\n    if (type === 'height') {\n      return node.offsetHeight;\n    }\n    if (type === 'width') {\n      return node.offsetWidth;\n    }\n  }\n  if (!(type in removePixel)) {\n    removePixel[type] = PIXEL_PATTERN.test(type);\n  }\n  return removePixel[type] ? parseFloat(value) || 0 : value;\n}\nexport function get(node, name) {\n  var length = arguments.length;\n  var style = getComputedStyle(node);\n  name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;\n  return length === 1 ? style : getStyleValue(node, name, style[name] || node.style[name]);\n}\nexport function set(node, name, value) {\n  var length = arguments.length;\n  name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;\n  if (length === 3) {\n    if (typeof value === 'number' && PIXEL_PATTERN.test(name)) {\n      value = \"\".concat(value, \"px\");\n    }\n    node.style[name] = value; // Number\n    return value;\n  }\n  for (var x in name) {\n    if (name.hasOwnProperty(x)) {\n      set(node, x, name[x]);\n    }\n  }\n  return getComputedStyle(node);\n}\nexport function getOuterWidth(el) {\n  if (el === document.body) {\n    return document.documentElement.clientWidth;\n  }\n  return el.offsetWidth;\n}\nexport function getOuterHeight(el) {\n  if (el === document.body) {\n    return window.innerHeight || document.documentElement.clientHeight;\n  }\n  return el.offsetHeight;\n}\nexport function getDocSize() {\n  var width = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);\n  var height = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n  return {\n    width: width,\n    height: height\n  };\n}\nexport function getClientSize() {\n  var width = document.documentElement.clientWidth;\n  var height = window.innerHeight || document.documentElement.clientHeight;\n  return {\n    width: width,\n    height: height\n  };\n}\nexport function getScroll() {\n  return {\n    scrollLeft: Math.max(document.documentElement.scrollLeft, document.body.scrollLeft),\n    scrollTop: Math.max(document.documentElement.scrollTop, document.body.scrollTop)\n  };\n}\nexport function getOffset(node) {\n  var box = node.getBoundingClientRect();\n  var docElem = document.documentElement;\n\n  // < ie8 不支持 win.pageXOffset, 则使用 docElem.scrollLeft\n  return {\n    left: box.left + (window.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || document.body.clientLeft || 0),\n    top: box.top + (window.pageYOffset || docElem.scrollTop) - (docElem.clientTop || document.body.clientTop || 0)\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toArray;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactIs = require(\"react-is\");\nfunction toArray(children) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ret = [];\n  _react.default.Children.forEach(children, function (child) {\n    if ((child === undefined || child === null) && !option.keepEmpty) {\n      return;\n    }\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray(child));\n    } else if ((0, _reactIs.isFragment)(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children, option));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addEventListenerWrap;\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nfunction addEventListenerWrap(target, eventType, cb, option) {\n  /* eslint camelcase: 2 */\n  var callback = _reactDom.default.unstable_batchedUpdates ? function run(e) {\n    _reactDom.default.unstable_batchedUpdates(cb, e);\n  } : cb;\n  if (target !== null && target !== void 0 && target.addEventListener) {\n    target.addEventListener(eventType, callback, option);\n  }\n  return {\n    remove: function remove() {\n      if (target !== null && target !== void 0 && target.removeEventListener) {\n        target.removeEventListener(eventType, callback, option);\n      }\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.getClientSize = getClientSize;\nexports.getDocSize = getDocSize;\nexports.getOffset = getOffset;\nexports.getOuterHeight = getOuterHeight;\nexports.getOuterWidth = getOuterWidth;\nexports.getScroll = getScroll;\nexports.set = set;\n/* eslint-disable no-nested-ternary */\nvar PIXEL_PATTERN = /margin|padding|width|height|max|min|offset/;\nvar removePixel = {\n  left: true,\n  top: true\n};\nvar floatMap = {\n  cssFloat: 1,\n  styleFloat: 1,\n  float: 1\n};\nfunction getComputedStyle(node) {\n  return node.nodeType === 1 ? node.ownerDocument.defaultView.getComputedStyle(node, null) : {};\n}\nfunction getStyleValue(node, type, value) {\n  type = type.toLowerCase();\n  if (value === 'auto') {\n    if (type === 'height') {\n      return node.offsetHeight;\n    }\n    if (type === 'width') {\n      return node.offsetWidth;\n    }\n  }\n  if (!(type in removePixel)) {\n    removePixel[type] = PIXEL_PATTERN.test(type);\n  }\n  return removePixel[type] ? parseFloat(value) || 0 : value;\n}\nfunction get(node, name) {\n  var length = arguments.length;\n  var style = getComputedStyle(node);\n  name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;\n  return length === 1 ? style : getStyleValue(node, name, style[name] || node.style[name]);\n}\nfunction set(node, name, value) {\n  var length = arguments.length;\n  name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;\n  if (length === 3) {\n    if (typeof value === 'number' && PIXEL_PATTERN.test(name)) {\n      value = \"\".concat(value, \"px\");\n    }\n    node.style[name] = value; // Number\n    return value;\n  }\n  for (var x in name) {\n    if (name.hasOwnProperty(x)) {\n      set(node, x, name[x]);\n    }\n  }\n  return getComputedStyle(node);\n}\nfunction getOuterWidth(el) {\n  if (el === document.body) {\n    return document.documentElement.clientWidth;\n  }\n  return el.offsetWidth;\n}\nfunction getOuterHeight(el) {\n  if (el === document.body) {\n    return window.innerHeight || document.documentElement.clientHeight;\n  }\n  return el.offsetHeight;\n}\nfunction getDocSize() {\n  var width = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);\n  var height = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction getClientSize() {\n  var width = document.documentElement.clientWidth;\n  var height = window.innerHeight || document.documentElement.clientHeight;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction getScroll() {\n  return {\n    scrollLeft: Math.max(document.documentElement.scrollLeft, document.body.scrollLeft),\n    scrollTop: Math.max(document.documentElement.scrollTop, document.body.scrollTop)\n  };\n}\nfunction getOffset(node) {\n  var box = node.getBoundingClientRect();\n  var docElem = document.documentElement;\n\n  // < ie8 不支持 win.pageXOffset, 则使用 docElem.scrollLeft\n  return {\n    left: box.left + (window.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || document.body.clientLeft || 0),\n    top: box.top + (window.pageYOffset || docElem.scrollTop) - (docElem.clientTop || document.body.clientTop || 0)\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = exports.default = function _default(element) {\n  if (!element) {\n    return false;\n  }\n  if (element instanceof Element) {\n    if (element.offsetParent) {\n      return true;\n    }\n    if (element.getBBox) {\n      var _getBBox = element.getBBox(),\n        width = _getBBox.width,\n        height = _getBBox.height;\n      if (width || height) {\n        return true;\n      }\n    }\n    if (element.getBoundingClientRect) {\n      var _element$getBoundingC = element.getBoundingClientRect(),\n        _width = _element$getBoundingC.width,\n        _height = _element$getBoundingC.height;\n      if (_width || _height) {\n        return true;\n      }\n    }\n  }\n  return false;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getScrollBarSize;\nexports.getTargetScrollBarSize = getTargetScrollBarSize;\n/* eslint-disable no-param-reassign */\n\nvar cached;\nfunction getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n  if (fresh || cached === undefined) {\n    var inner = document.createElement('div');\n    inner.style.width = '100%';\n    inner.style.height = '200px';\n    var outer = document.createElement('div');\n    var outerStyle = outer.style;\n    outerStyle.position = 'absolute';\n    outerStyle.top = '0';\n    outerStyle.left = '0';\n    outerStyle.pointerEvents = 'none';\n    outerStyle.visibility = 'hidden';\n    outerStyle.width = '200px';\n    outerStyle.height = '150px';\n    outerStyle.overflow = 'hidden';\n    outer.appendChild(inner);\n    document.body.appendChild(outer);\n    var widthContained = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    var widthScroll = inner.offsetWidth;\n    if (widthContained === widthScroll) {\n      widthScroll = outer.clientWidth;\n    }\n    document.body.removeChild(outer);\n    cached = widthContained - widthScroll;\n  }\n  return cached;\n}\nfunction ensureSize(str) {\n  var match = str.match(/^(.*)px$/);\n  var value = Number(match === null || match === void 0 ? void 0 : match[1]);\n  return Number.isNaN(value) ? getScrollBarSize() : value;\n}\nfunction getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n  var _getComputedStyle = getComputedStyle(target, '::-webkit-scrollbar'),\n    width = _getComputedStyle.width,\n    height = _getComputedStyle.height;\n  return {\n    width: ensureSize(width),\n    height: ensureSize(height)\n  };\n}","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useEvent;\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction useEvent(callback) {\n  var fnRef = React.useRef();\n  fnRef.current = callback;\n  var memoFn = React.useCallback(function () {\n    var _fnRef$current;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_fnRef$current = fnRef.current) === null || _fnRef$current === void 0 ? void 0 : _fnRef$current.call.apply(_fnRef$current, [fnRef].concat(args));\n  }, []);\n  return memoFn;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLayoutUpdateEffect = exports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _canUseDom = _interopRequireDefault(require(\"../Dom/canUseDom\"));\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\nvar useInternalLayoutEffect = process.env.NODE_ENV !== 'test' && (0, _canUseDom.default)() ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = function useLayoutEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useInternalLayoutEffect(function () {\n    return callback(firstMountRef.current);\n  }, deps);\n\n  // We tell react that first mount has passed\n  useInternalLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};\nvar useLayoutUpdateEffect = exports.useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  useLayoutEffect(function (firstMount) {\n    if (!firstMount) {\n      return callback();\n    }\n  }, deps);\n};\nvar _default = exports.default = useLayoutEffect;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useMergedState;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _useEvent = _interopRequireDefault(require(\"./useEvent\"));\nvar _useLayoutEffect = require(\"./useLayoutEffect\");\nvar _useState5 = _interopRequireDefault(require(\"./useState\"));\n/** We only think `undefined` is empty */\nfunction hasValue(value) {\n  return value !== undefined;\n}\n\n/**\n * Similar to `useState` but will use props value if provided.\n * Note that internal use rc-util `useState` hook.\n */\nfunction useMergedState(defaultStateValue, option) {\n  var _ref = option || {},\n    defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    onChange = _ref.onChange,\n    postState = _ref.postState;\n\n  // ======================= Init =======================\n  var _useState = (0, _useState5.default)(function () {\n      if (hasValue(value)) {\n        return value;\n      } else if (hasValue(defaultValue)) {\n        return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n      } else {\n        return typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\n      }\n    }),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    innerValue = _useState2[0],\n    setInnerValue = _useState2[1];\n  var mergedValue = value !== undefined ? value : innerValue;\n  var postMergedValue = postState ? postState(mergedValue) : mergedValue;\n\n  // ====================== Change ======================\n  var onChangeFn = (0, _useEvent.default)(onChange);\n  var _useState3 = (0, _useState5.default)([mergedValue]),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    prevValue = _useState4[0],\n    setPrevValue = _useState4[1];\n  (0, _useLayoutEffect.useLayoutUpdateEffect)(function () {\n    var prev = prevValue[0];\n    if (innerValue !== prev) {\n      onChangeFn(innerValue, prev);\n    }\n  }, [prevValue]);\n\n  // Sync value back to `undefined` when it from control to un-control\n  (0, _useLayoutEffect.useLayoutUpdateEffect)(function () {\n    if (!hasValue(value)) {\n      setInnerValue(value);\n    }\n  }, [value]);\n\n  // ====================== Update ======================\n  var triggerChange = (0, _useEvent.default)(function (updater, ignoreDestroy) {\n    setInnerValue(updater, ignoreDestroy);\n    setPrevValue([mergedValue], ignoreDestroy);\n  });\n  return [postMergedValue, triggerChange];\n}","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSafeState;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\n/**\n * Same as React.useState but `setState` accept `ignoreDestroy` param to not to setState after destroyed.\n * We do not make this auto is to avoid real memory leak.\n * Developer should confirm it's safe to ignore themselves.\n */\nfunction useSafeState(defaultValue) {\n  var destroyRef = React.useRef(false);\n  var _React$useState = React.useState(defaultValue),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  React.useEffect(function () {\n    destroyRef.current = false;\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n  function safeSetState(updater, ignoreDestroy) {\n    if (ignoreDestroy && destroyRef.current) {\n      return;\n    }\n    setValue(updater);\n  }\n  return [value, safeSetState];\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _class;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var _this$props2 = this.props,\n          itemCount = _this$props2.itemCount,\n          layout = _this$props2.layout;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n\n      var scrollbarSize = 0;\n\n      if (this._outerRef) {\n        var outerRef = this._outerRef;\n\n        if (layout === 'vertical') {\n          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;\n        } else {\n          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;\n        }\n      }\n\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          initialScrollOffset = _this$props3.initialScrollOffset,\n          layout = _this$props3.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props4 = this.props,\n          direction = _this$props4.direction,\n          layout = _this$props4.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          direction = _this$props5.direction,\n          height = _this$props5.height,\n          innerRef = _this$props5.innerRef,\n          innerElementType = _this$props5.innerElementType,\n          innerTagName = _this$props5.innerTagName,\n          itemCount = _this$props5.itemCount,\n          itemData = _this$props5.itemData,\n          _this$props5$itemKey = _this$props5.itemKey,\n          itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,\n          layout = _this$props5.layout,\n          outerElementType = _this$props5.outerElementType,\n          outerTagName = _this$props5.outerTagName,\n          style = _this$props5.style,\n          useIsScrolling = _this$props5.useIsScrolling,\n          width = _this$props5.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props6 = this.props,\n          itemCount = _this$props6.itemCount,\n          overscanCount = _this$props6.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _class;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar _excluded = [\"style\"],\n    _excluded2 = [\"style\"];\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { FixedSizeGrid, FixedSizeList, VariableSizeGrid, VariableSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n"],"names":["getOffset","node","box","getBoundingClientRect","docElem","document","documentElement","left","window","pageXOffset","scrollLeft","clientLeft","body","top","pageYOffset","scrollTop","clientTop","_interopRequireDefault","Object","defineProperty","exports","value","toArray","children","option","arguments","length","undefined","ret","_react","default","Children","forEach","child","keepEmpty","Array","isArray","concat","_reactIs","isFragment","props","push","target","eventType","cb","callback","_reactDom","unstable_batchedUpdates","e","addEventListener","remove","removeEventListener","get","name","style","getComputedStyle","floatMap","type","toLowerCase","offsetHeight","offsetWidth","removePixel","PIXEL_PATTERN","test","parseFloat","getStyleValue","getClientSize","width","clientWidth","height","innerHeight","clientHeight","getDocSize","Math","max","scrollWidth","scrollHeight","getOuterHeight","el","getOuterWidth","getScroll","set","x","hasOwnProperty","cssFloat","styleFloat","float","nodeType","ownerDocument","defaultView","element","Element","offsetParent","getBBox","_getBBox","_element$getBoundingC","_width","_height","cached","getScrollBarSize","fresh","inner","createElement","outer","outerStyle","position","pointerEvents","visibility","overflow","appendChild","widthContained","widthScroll","removeChild","ensureSize","str","match","Number","isNaN","getTargetScrollBarSize","_getComputedStyle","_interopRequireWildcard","fnRef","React","useRef","current","useCallback","_fnRef$current","_len","args","_key","call","apply","useLayoutUpdateEffect","useInternalLayoutEffect","useLayoutEffect","useEffect","deps","firstMountRef","firstMount","defaultStateValue","_ref","defaultValue","onChange","postState","_useState","_useState5","hasValue","_useState2","_slicedToArray2","innerValue","setInnerValue","mergedValue","postMergedValue","onChangeFn","_useEvent","_useState3","_useState4","prevValue","setPrevValue","_useLayoutEffect","prev","updater","ignoreDestroy","destroyRef","_React$useState","useState","_React$useState2","setValue","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","requestTimeout","delay","start","requestAnimationFrame","tick","size","getScrollbarSize","recalculate","div","cachedRTLResult","getRTLOffsetType","outerDiv","direction","innerDiv","innerStyle","defaultItemKey","columnIndex","data","rowIndex","createGridComponent","_ref2","_class","getColumnOffset","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getColumnWidth","getEstimatedTotalHeight","getEstimatedTotalWidth","getOffsetForColumnAndAlignment","getOffsetForRowAndAlignment","getRowHeight","getRowOffset","getRowStartIndexForOffset","getRowStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","Grid","_this","this","_instanceProps","_resetIsScrollingTimeoutId","_outerRef","state","instance","isScrolling","horizontalScrollDirection","initialScrollLeft","initialScrollTop","scrollUpdateWasRequested","verticalScrollDirection","_callOnItemsRendered","overscanColumnStartIndex","overscanColumnStopIndex","overscanRowStartIndex","overscanRowStopIndex","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","_this$props","columnWidth","rowHeight","itemStyleCache","_getItemStyleCache","key","_offset","isRtl","right","_","__","___","_onScroll","event","_event$currentTarget","currentTarget","setState","prevState","calculatedScrollLeft","min","calculatedScrollTop","_resetIsScrollingDebounced","_outerRefSetter","ref","outerRef","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps","_proto","prototype","scrollTo","_ref3","scrollToItem","_ref4","_ref4$align","align","_this$props2","columnCount","rowCount","_this$state","scrollbarSize","estimatedTotalHeight","horizontalScrollbarSize","verticalScrollbarSize","componentDidMount","_this$props3","_callPropsCallbacks","componentDidUpdate","_this$state2","componentWillUnmount","render","_this$props4","className","innerRef","innerElementType","innerTagName","itemData","_this$props4$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getHorizontalR","_getHorizontalRangeToRender","columnStartIndex","columnStopIndex","_this$_getVerticalRan","_getVerticalRangeToRender","rowStartIndex","rowStopIndex","items","_rowIndex","_columnIndex","estimatedTotalWidth","WebkitOverflowScrolling","willChange","_this$props5","_this$_getHorizontalR2","_overscanColumnStartIndex","_overscanColumnStopIndex","_visibleColumnStartIndex","_visibleColumnStopIndex","_this$_getVerticalRan2","_overscanRowStartIndex","_overscanRowStopIndex","_visibleRowStartIndex","_visibleRowStopIndex","_this$state3","_horizontalScrollDirection","_scrollLeft","_scrollTop","_scrollUpdateWasRequested","_verticalScrollDirection","_this$props6","overscanColumnCount","overscanColumnsCount","overscanCount","_this$state4","overscanCountResolved","startIndex","stopIndex","overscanBackward","overscanForward","_this$props7","overscanRowCount","overscanRowsCount","_this$state5","PureComponent","defaultProps","_ref5","_ref6","rowMetadataMap","estimatedRowHeight","lastMeasuredRowIndex","totalSizeOfMeasuredRows","itemMetadata","offset","columnMetadataMap","estimatedColumnWidth","lastMeasuredColumnIndex","getItemMetadata","itemType","index","instanceProps","itemMetadataMap","itemSize","lastMeasuredIndex","i","findNearestItem","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentOffset","itemCount","interval","getOffsetForIndexAndAlignment","scrollOffset","estimatedTotalSize","maxOffset","minOffset","round","VariableSizeGrid","resetAfterColumnIndex","shouldForceUpdate","resetAfterIndices","resetAfterRowIndex","_ref6$shouldForceUpda","forceUpdate","_ref7","defaultItemKey$1","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getStartIndexForOffset","getStopIndexForStartIndex","List","scrollDirection","initialScrollOffset","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","layout","isHorizontal","offsetHorizontal","_onScrollHorizontal","_onScrollVertical","_event$currentTarget2","validateSharedProps$1","_this$props5$itemKey","_this$_getRangeToRend","_getRangeToRender","_index","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_scrollDirection","_scrollOffset","FixedSizeList","lastItemOffset","middleOffset","ceil","numVisibleItems"],"sourceRoot":""}