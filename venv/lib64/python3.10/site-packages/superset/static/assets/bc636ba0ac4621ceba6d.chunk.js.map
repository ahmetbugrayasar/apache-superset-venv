{"version":3,"file":"bc636ba0ac4621ceba6d.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/lodash/uniqBy.js","webpack://superset/./node_modules/react-ultimate-pagination/lib/react-ultimate-pagination.js","webpack://superset/./packages/superset-ui-core/src/hooks/useTruncation/useChildElementTruncation.ts","webpack://superset/./src/components/AuditInfo/index.tsx","webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/Tags/Tag.tsx","webpack://superset/./src/components/Tags/TagsList.tsx","webpack://superset/./src/dashboard/components/nativeFilters/utils.ts","webpack://superset/./src/components/ListView/CrossLinksTooltip.tsx","webpack://superset/./src/components/ListView/CrossLinks.tsx","webpack://superset/./src/components/ListView/DashboardCrossLinks.tsx","webpack://superset/./src/pages/ChartList/index.tsx","webpack://superset/./src/utils/getOwnerName.ts","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination-constants.js","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination-item-factories.js","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination-utils.js","webpack://superset/./node_modules/ultimate-pagination/lib/ultimate-pagination.js"],"sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ITEM_TYPES = exports.createUltimatePagination = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ultimatePagination = require('ultimate-pagination');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar renderItemComponentFunctionFactory = function renderItemComponentFunctionFactory(itemTypeToComponent, currentPage, onChange) {\n  var onItemClickFunctionFactory = function onItemClickFunctionFactory(_ref) {\n    var value = _ref.value,\n        isDisabled = _ref.isDisabled;\n\n    return function () {\n      if (!isDisabled && onChange && currentPage !== value) {\n        onChange(value);\n      }\n    };\n  };\n\n  return function (props) {\n    var ItemComponent = itemTypeToComponent[props.type];\n    var onItemClick = onItemClickFunctionFactory(props);\n    return _react2.default.createElement(ItemComponent, _extends({ onClick: onItemClick }, props));\n  };\n};\n\nvar createUltimatePagination = function createUltimatePagination(_ref2) {\n  var itemTypeToComponent = _ref2.itemTypeToComponent,\n      _ref2$WrapperComponen = _ref2.WrapperComponent,\n      WrapperComponent = _ref2$WrapperComponen === undefined ? 'div' : _ref2$WrapperComponen;\n\n  var UltimatePaginationComponent = function UltimatePaginationComponent(props) {\n    var currentPage = props.currentPage,\n        totalPages = props.totalPages,\n        boundaryPagesRange = props.boundaryPagesRange,\n        siblingPagesRange = props.siblingPagesRange,\n        hideEllipsis = props.hideEllipsis,\n        hidePreviousAndNextPageLinks = props.hidePreviousAndNextPageLinks,\n        hideFirstAndLastPageLinks = props.hideFirstAndLastPageLinks,\n        onChange = props.onChange,\n        disabled = props.disabled,\n        restProps = _objectWithoutProperties(props, ['currentPage', 'totalPages', 'boundaryPagesRange', 'siblingPagesRange', 'hideEllipsis', 'hidePreviousAndNextPageLinks', 'hideFirstAndLastPageLinks', 'onChange', 'disabled']);\n\n    var paginationModel = (0, _ultimatePagination.getPaginationModel)({\n      currentPage: currentPage,\n      totalPages: totalPages,\n      boundaryPagesRange: boundaryPagesRange,\n      siblingPagesRange: siblingPagesRange,\n      hideEllipsis: hideEllipsis,\n      hidePreviousAndNextPageLinks: hidePreviousAndNextPageLinks,\n      hideFirstAndLastPageLinks: hideFirstAndLastPageLinks\n    });\n    var renderItemComponent = renderItemComponentFunctionFactory(itemTypeToComponent, currentPage, onChange);\n    return _react2.default.createElement(\n      WrapperComponent,\n      restProps,\n      paginationModel.map(function (itemModel) {\n        return renderItemComponent(_extends({}, itemModel, {\n          isDisabled: !!disabled\n        }));\n      })\n    );\n  };\n\n  UltimatePaginationComponent.propTypes = {\n    currentPage: _propTypes2.default.number.isRequired,\n    totalPages: _propTypes2.default.number.isRequired,\n    boundaryPagesRange: _propTypes2.default.number,\n    siblingPagesRange: _propTypes2.default.number,\n    hideEllipsis: _propTypes2.default.bool,\n    hidePreviousAndNextPageLinks: _propTypes2.default.bool,\n    hideFirstAndLastPageLinks: _propTypes2.default.bool,\n    onChange: _propTypes2.default.func,\n    disabled: _propTypes2.default.bool\n  };\n\n  return UltimatePaginationComponent;\n};\n\nexports.createUltimatePagination = createUltimatePagination;\nexports.ITEM_TYPES = _ultimatePagination.ITEM_TYPES;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useLayoutEffect, useRef, useState } from 'react';\n\n/**\n * This hook encapsulates logic to support truncation of child HTML\n * elements contained in a fixed-width parent HTML element.  Given\n * a ref to the parent element and optionally a ref to the \"+x\"\n * component that shows the number of truncated items, this hook\n * will return the number of elements that are not fully visible\n * (including those completely hidden) and whether any elements\n * are completely hidden.\n */\nconst useChildElementTruncation = () => {\n  const [elementsTruncated, setElementsTruncated] = useState(0);\n  const [hasHiddenElements, setHasHiddenElements] = useState(false);\n  const elementRef = useRef<HTMLDivElement>(null);\n  const plusRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    const onResize = () => {\n      const currentElement = elementRef.current;\n      if (!currentElement) {\n        return;\n      }\n      const plusRefElement = plusRef.current;\n      const { scrollWidth, clientWidth, childNodes } = currentElement;\n\n      if (scrollWidth > clientWidth) {\n        // \"...\" is around 6px wide\n        const truncationWidth = 6;\n        const plusSize = plusRefElement?.offsetWidth || 0;\n        const maxWidth = clientWidth - truncationWidth;\n        const elementsCount = childNodes.length;\n\n        let width = 0;\n        let hiddenElements = 0;\n        for (let i = 0; i < elementsCount; i += 1) {\n          const itemWidth = (childNodes[i] as HTMLElement).offsetWidth;\n          const remainingWidth = maxWidth - width - plusSize;\n\n          // assures it shows +{number} only when the item is not visible\n          if (remainingWidth <= 0) {\n            hiddenElements += 1;\n          }\n          width += itemWidth;\n        }\n\n        if (elementsCount > 1 && hiddenElements) {\n          setHasHiddenElements(true);\n          setElementsTruncated(hiddenElements);\n        } else {\n          setHasHiddenElements(false);\n          setElementsTruncated(1);\n        }\n      } else {\n        setHasHiddenElements(false);\n        setElementsTruncated(0);\n      }\n    };\n    const obs = new ResizeObserver(onResize);\n\n    const element = elementRef.current?.parentElement;\n    if (element) {\n      obs.observe(element);\n    }\n\n    onResize();\n\n    return () => {\n      obs.disconnect();\n    };\n  }, [plusRef.current]); // plus is rendered dynamically - the component rerenders the hook when plus appears, this makes sure that useLayoutEffect is rerun\n\n  return [elementRef, plusRef, elementsTruncated, hasHiddenElements] as const;\n};\n\nexport default useChildElementTruncation;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport Owner from 'src/types/Owner';\nimport { Tooltip } from 'src/components/Tooltip';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { t } from '@superset-ui/core';\n\nexport type ModifiedInfoProps = {\n  user?: Owner;\n  date: string;\n};\n\nexport const ModifiedInfo = ({ user, date }: ModifiedInfoProps) => {\n  const dateSpan = (\n    <span className=\"no-wrap\" data-test=\"audit-info-date\">\n      {date}\n    </span>\n  );\n\n  if (user) {\n    const userName = getOwnerName(user);\n    const title = t('Modified by: %s', userName);\n    return (\n      <Tooltip title={title} placement=\"bottom\">\n        {dateSpan}\n      </Tooltip>\n    );\n  }\n  return dateSpan;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n  sshTunnelPasswordFields?: string[];\n  setSSHTunnelPasswordFields?: (sshTunnelPasswordFields: string[]) => void;\n  sshTunnelPrivateKeyFields?: string[];\n  setSSHTunnelPrivateKeyFields?: (sshTunnelPrivateKeyFields: string[]) => void;\n  sshTunnelPrivateKeyPasswordFields?: string[];\n  setSSHTunnelPrivateKeyPasswordFields?: (\n    sshTunnelPrivateKeyPasswordFields: string[],\n  ) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n  sshTunnelPasswordFields = [],\n  setSSHTunnelPasswordFields = () => {},\n  sshTunnelPrivateKeyFields = [],\n  setSSHTunnelPrivateKeyFields = () => {},\n  sshTunnelPrivateKeyPasswordFields = [],\n  setSSHTunnelPrivateKeyPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [sshTunnelPasswords, setSSHTunnelPasswords] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeys, setSSHTunnelPrivateKeys] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeyPasswords, setSSHTunnelPrivateKeyPasswords] =\n    useState<Record<string, string>>({});\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n    setSSHTunnelPasswordFields([]);\n    setSSHTunnelPrivateKeyFields([]);\n    setSSHTunnelPrivateKeyPasswordFields([]);\n    setSSHTunnelPasswords({});\n    setSSHTunnelPrivateKeys({});\n    setSSHTunnelPrivateKeyPasswords({});\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      sshPasswordNeeded,\n      sshPrivateKeyNeeded,\n      sshPrivateKeyPasswordNeeded,\n    },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  useEffect(() => {\n    setSSHTunnelPasswordFields(sshPasswordNeeded);\n    if (sshPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPasswordNeeded, setSSHTunnelPasswordFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyFields(sshPrivateKeyNeeded);\n    if (sshPrivateKeyNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyNeeded, setSSHTunnelPrivateKeyFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyPasswordFields(sshPrivateKeyPasswordNeeded);\n    if (sshPrivateKeyPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyPasswordNeeded, setSSHTunnelPrivateKeyPasswordFields]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      sshTunnelPasswords,\n      sshTunnelPrivateKeys,\n      sshTunnelPrivateKeyPasswords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (\n      passwordFields.length === 0 &&\n      sshTunnelPasswordFields.length === 0 &&\n      sshTunnelPrivateKeyFields.length === 0 &&\n      sshTunnelPrivateKeyPasswordFields.length === 0\n    ) {\n      return null;\n    }\n\n    const files = [\n      ...new Set([\n        ...passwordFields,\n        ...sshTunnelPasswordFields,\n        ...sshTunnelPrivateKeyFields,\n        ...sshTunnelPrivateKeyPasswordFields,\n      ]),\n    ];\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {files.map(fileName => (\n          <>\n            {passwordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`password-${fileName}`}\n                  autoComplete={`password-${fileName}`}\n                  type=\"password\"\n                  value={passwords[fileName]}\n                  onChange={event =>\n                    setPasswords({\n                      ...passwords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`ssh_tunnel_password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPasswords({\n                      ...sshTunnelPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_password\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <textarea\n                  name={`ssh_tunnel_private_key-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key-${fileName}`}\n                  value={sshTunnelPrivateKeys[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeys({\n                      ...sshTunnelPrivateKeys,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key_password-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_private_key_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPrivateKeyPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeyPasswords({\n                      ...sshTunnelPrivateKeyPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key_password\"\n                />\n              </StyledInputContainer>\n            )}\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={\n            passwordFields.length > 0 ||\n            sshTunnelPasswordFields.length > 0 ||\n            sshTunnelPrivateKeyFields.length > 0 ||\n            sshTunnelPrivateKeyPasswordFields.length > 0\n          }\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst MAX_DISPLAY_CHAR = 20;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n  toolTipTitle = name,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > MAX_DISPLAY_CHAR, [name]);\n  const tagDisplay = isLongTag ? `${name.slice(0, MAX_DISPLAY_CHAR)}...` : name;\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag\n            key={id}\n            closable={editable}\n            onClose={handleClose}\n            color=\"blue\"\n          >\n            {tagDisplay}\n          </StyledTag>\n        </Tooltip>\n      ) : (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag data-test=\"tag\" role=\"link\" key={id} onClick={onClick}>\n            {id ? (\n              <a\n                href={`/superset/all_entities/?id=${id}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {tagDisplay}\n              </a>\n            ) : (\n              tagDisplay\n            )}\n          </StyledTag>\n        </Tooltip>\n      )}\n    </>\n  );\n\n  return tagElem;\n};\n\nexport default Tag;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag\n              name={`+${extraTags}...`}\n              onClick={expand}\n              toolTipTitle={tags.map(t => t.name).join(', ')}\n            />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AdhocFilter,\n  Behavior,\n  DataMaskStateWithId,\n  EXTRA_FORM_DATA_APPEND_KEYS,\n  EXTRA_FORM_DATA_OVERRIDE_KEYS,\n  ExtraFormData,\n  isFeatureEnabled,\n  FeatureFlag,\n  Filter,\n  getChartMetadataRegistry,\n  QueryFormData,\n  t,\n} from '@superset-ui/core';\nimport { DashboardLayout } from 'src/dashboard/types';\nimport extractUrlParams from 'src/dashboard/util/extractUrlParams';\nimport { CHART_TYPE, TAB_TYPE } from '../../util/componentTypes';\nimport { DASHBOARD_GRID_ID, DASHBOARD_ROOT_ID } from '../../util/constants';\nimport getBootstrapData from '../../../utils/getBootstrapData';\n\nconst getDefaultRowLimit = (): number => {\n  const bootstrapData = getBootstrapData();\n  const nativeFilterDefaultRowLimit =\n    bootstrapData?.common?.conf?.NATIVE_FILTER_DEFAULT_ROW_LIMIT;\n  return nativeFilterDefaultRowLimit || 1000;\n};\n\nexport const getFormData = ({\n  datasetId,\n  dependencies = {},\n  groupby,\n  defaultDataMask,\n  controlValues,\n  filterType,\n  sortMetric,\n  adhoc_filters,\n  time_range,\n  granularity_sqla,\n  type,\n  dashboardId,\n  id,\n}: Partial<Filter> & {\n  dashboardId: number;\n  datasetId?: number;\n  dependencies?: object;\n  groupby?: string;\n  adhoc_filters?: AdhocFilter[];\n  time_range?: string;\n}): Partial<QueryFormData> => {\n  const otherProps: {\n    datasource?: string;\n    groupby?: string[];\n    sortMetric?: string;\n  } = {};\n  if (datasetId) {\n    otherProps.datasource = `${datasetId}__table`;\n  }\n  if (groupby) {\n    otherProps.groupby = [groupby];\n  }\n  if (sortMetric) {\n    otherProps.sortMetric = sortMetric;\n  }\n  return {\n    ...controlValues,\n    ...otherProps,\n    adhoc_filters: adhoc_filters ?? [],\n    extra_filters: [],\n    extra_form_data: dependencies,\n    granularity_sqla,\n    metrics: ['count'],\n    row_limit: getDefaultRowLimit(),\n    showSearch: true,\n    defaultValue: defaultDataMask?.filterState?.value,\n    time_range,\n    url_params: extractUrlParams('regular'),\n    inView: true,\n    viz_type: filterType,\n    type,\n    dashboardId,\n    native_filter_id: id,\n  };\n};\n\nexport function mergeExtraFormData(\n  originalExtra: ExtraFormData = {},\n  newExtra: ExtraFormData = {},\n): ExtraFormData {\n  const mergedExtra: ExtraFormData = {};\n  EXTRA_FORM_DATA_APPEND_KEYS.forEach((key: string) => {\n    const mergedValues = [\n      ...(originalExtra[key] || []),\n      ...(newExtra[key] || []),\n    ];\n    if (mergedValues.length) {\n      mergedExtra[key] = mergedValues;\n    }\n  });\n  EXTRA_FORM_DATA_OVERRIDE_KEYS.forEach((key: string) => {\n    const originalValue = originalExtra[key];\n    if (originalValue !== undefined) {\n      mergedExtra[key] = originalValue;\n    }\n    const newValue = newExtra[key];\n    if (newValue !== undefined) {\n      mergedExtra[key] = newValue;\n    }\n  });\n  return mergedExtra;\n}\n\nexport function isCrossFilter(vizType: string) {\n  // @ts-ignore need export from superset-ui `ItemWithValue`\n  return getChartMetadataRegistry().items[vizType]?.value.behaviors?.includes(\n    Behavior.InteractiveChart,\n  );\n}\n\nexport function getExtraFormData(\n  dataMask: DataMaskStateWithId,\n  filterIdsAppliedOnChart: string[],\n): ExtraFormData {\n  let extraFormData: ExtraFormData = {};\n  filterIdsAppliedOnChart.forEach(key => {\n    extraFormData = mergeExtraFormData(\n      extraFormData,\n      dataMask[key]?.extraFormData ?? {},\n    );\n  });\n  return extraFormData;\n}\n\nexport function nativeFilterGate(behaviors: Behavior[]): boolean {\n  return (\n    !behaviors.includes(Behavior.NativeFilter) ||\n    (isFeatureEnabled(FeatureFlag.DashboardCrossFilters) &&\n      behaviors.includes(Behavior.InteractiveChart))\n  );\n}\n\nconst isComponentATab = (\n  dashboardLayout: DashboardLayout,\n  componentId: string,\n) => dashboardLayout?.[componentId]?.type === TAB_TYPE;\n\nconst findTabsWithChartsInScopeHelper = (\n  dashboardLayout: DashboardLayout,\n  chartsInScope: number[],\n  componentId: string,\n  tabIds: string[],\n  tabsToHighlight: Set<string>,\n  visited: Set<string>,\n) => {\n  if (visited.has(componentId)) {\n    return;\n  }\n  visited.add(componentId);\n  if (\n    dashboardLayout?.[componentId]?.type === CHART_TYPE &&\n    chartsInScope.includes(dashboardLayout[componentId]?.meta?.chartId)\n  ) {\n    tabIds.forEach(tabsToHighlight.add, tabsToHighlight);\n  }\n  if (\n    dashboardLayout?.[componentId]?.children?.length === 0 ||\n    (isComponentATab(dashboardLayout, componentId) &&\n      tabsToHighlight.has(componentId))\n  ) {\n    return;\n  }\n  dashboardLayout[componentId]?.children.forEach(childId =>\n    findTabsWithChartsInScopeHelper(\n      dashboardLayout,\n      chartsInScope,\n      childId,\n      isComponentATab(dashboardLayout, childId) ? [...tabIds, childId] : tabIds,\n      tabsToHighlight,\n      visited,\n    ),\n  );\n};\n\nexport const findTabsWithChartsInScope = (\n  dashboardLayout: DashboardLayout,\n  chartsInScope: number[],\n) => {\n  const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n  const rootChildId = dashboardRoot.children[0];\n  const hasTopLevelTabs = rootChildId !== DASHBOARD_GRID_ID;\n  const tabsInScope = new Set<string>();\n  const visited = new Set<string>();\n  if (hasTopLevelTabs) {\n    dashboardLayout[rootChildId]?.children?.forEach(tabId =>\n      findTabsWithChartsInScopeHelper(\n        dashboardLayout,\n        chartsInScope,\n        tabId,\n        [tabId],\n        tabsInScope,\n        visited,\n      ),\n    );\n  } else {\n    Object.values(dashboardLayout)\n      .filter(element => element?.type === TAB_TYPE)\n      .forEach(element =>\n        findTabsWithChartsInScopeHelper(\n          dashboardLayout,\n          chartsInScope,\n          element.id,\n          [element.id],\n          tabsInScope,\n          visited,\n        ),\n      );\n  }\n  return tabsInScope;\n};\n\nexport const getFilterValueForDisplay = (\n  value?: string[] | null | string | number | object,\n): string => {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  if (typeof value === 'string' || typeof value === 'number') {\n    return `${value}`;\n  }\n  if (Array.isArray(value)) {\n    return value.join(', ');\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  return t('Unknown value');\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Link } from 'react-router-dom';\n\nexport type CrossLinksTooltipProps = {\n  children: React.ReactNode;\n  crossLinks: { to: string; title: string }[];\n  moreItems?: number;\n  show: boolean;\n};\n\nconst StyledLinkedTooltip = styled.div`\n  .link {\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    display: block;\n    text-decoration: underline;\n  }\n`;\n\nexport default function CrossLinksTooltip({\n  children,\n  crossLinks = [],\n  moreItems = undefined,\n  show = false,\n}: CrossLinksTooltipProps) {\n  return (\n    <Tooltip\n      placement=\"top\"\n      data-test=\"crosslinks-tooltip\"\n      title={\n        show && (\n          <StyledLinkedTooltip>\n            {crossLinks.map(link => (\n              <Link\n                className=\"link\"\n                key={link.to}\n                to={link.to}\n                target=\"_blank\"\n                rel=\"noreferer noopener\"\n              >\n                {link.title}\n              </Link>\n            ))}\n            {moreItems && (\n              <span data-test=\"plus-more\">{t('+ %s more', moreItems)}</span>\n            )}\n          </StyledLinkedTooltip>\n        )\n      }\n    >\n      {children}\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { styled, useTruncation } from '@superset-ui/core';\nimport { Link } from 'react-router-dom';\nimport CrossLinksTooltip from './CrossLinksTooltip';\n\nexport type CrossLinkProps = {\n  title: string;\n  id: number;\n};\n\nexport type CrossLinksProps = {\n  crossLinks: Array<CrossLinkProps>;\n  maxLinks?: number;\n  linkPrefix?: string;\n};\n\nconst StyledCrossLinks = styled.div`\n  ${({ theme }) => `\n    & > span {\n      width: 100%;\n      display: flex;\n\n      .ant-tooltip-open {\n        display: inline;\n      }\n\n      .truncated {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        display: inline-block;\n        width: 100%;\n        vertical-align: bottom;\n      }\n\n      .count {\n        cursor: pointer;\n        color: ${theme.colors.grayscale.base};\n        font-weight: ${theme.typography.weights.bold};\n      }\n    }\n  `}\n`;\n\nfunction CrossLinks({\n  crossLinks,\n  maxLinks = 20,\n  linkPrefix = '/superset/dashboard/',\n}: CrossLinksProps) {\n  const [crossLinksRef, plusRef, elementsTruncated, hasHiddenElements] =\n    useTruncation();\n  const hasMoreItems = useMemo(\n    () =>\n      crossLinks.length > maxLinks ? crossLinks.length - maxLinks : undefined,\n    [crossLinks, maxLinks],\n  );\n  const links = useMemo(\n    () => (\n      <span className=\"truncated\" ref={crossLinksRef} data-test=\"crosslinks\">\n        {crossLinks.map((link, index) => (\n          <Link key={link.id} to={linkPrefix + link.id}>\n            {index === 0 ? link.title : `, ${link.title}`}\n          </Link>\n        ))}\n      </span>\n    ),\n    [crossLinks, crossLinksRef, linkPrefix],\n  );\n  const tooltipLinks = useMemo(\n    () =>\n      crossLinks.slice(0, maxLinks).map(l => ({\n        title: l.title,\n        to: linkPrefix + l.id,\n      })),\n    [crossLinks, linkPrefix, maxLinks],\n  );\n\n  return (\n    <StyledCrossLinks>\n      <CrossLinksTooltip\n        moreItems={hasMoreItems}\n        crossLinks={tooltipLinks}\n        show={!!elementsTruncated}\n      >\n        {links}\n        {hasHiddenElements && (\n          <span ref={plusRef} className=\"count\" data-test=\"count-crosslinks\">\n            +{elementsTruncated}\n          </span>\n        )}\n      </CrossLinksTooltip>\n    </StyledCrossLinks>\n  );\n}\n\nexport default React.memo(CrossLinks);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo } from 'react';\nimport { ensureIsArray } from '@superset-ui/core';\nimport { ChartLinkedDashboard } from 'src/types/Chart';\nimport CrossLinks from './CrossLinks';\n\nexport const DashboardCrossLinks = React.memo(\n  ({ dashboards }: { dashboards: ChartLinkedDashboard[] }) => {\n    const crossLinks = useMemo(\n      () =>\n        ensureIsArray(dashboards).map((d: ChartLinkedDashboard) => ({\n          title: d.dashboard_title,\n          id: d.id,\n        })),\n      [dashboards],\n    );\n    return <CrossLinks crossLinks={crossLinks} />;\n  },\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  JsonResponse,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport rison from 'rison';\nimport { uniqBy } from 'lodash';\nimport { useSelector } from 'react-redux';\nimport {\n  createErrorHandler,\n  createFetchRelated,\n  handleChartDelete,\n} from 'src/views/CRUD/utils';\nimport {\n  useChartEditModal,\n  useFavoriteStatus,\n  useListViewResource,\n} from 'src/views/CRUD/hooks';\nimport handleResourceExport from 'src/utils/export';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { TagsList } from 'src/components/Tags';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport FaveStar from 'src/components/FaveStar';\nimport { Link, useHistory } from 'react-router-dom';\nimport ListView, {\n  Filter,\n  FilterOperator,\n  Filters,\n  ListViewProps,\n  SelectOption,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Chart from 'src/types/Chart';\nimport Tag from 'src/types/TagType';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { nativeFilterGate } from 'src/dashboard/components/nativeFilters/utils';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport CertifiedBadge from 'src/components/CertifiedBadge';\nimport { GenericLink } from 'src/components/GenericLink/GenericLink';\nimport { loadTags } from 'src/components/Tags/utils';\nimport FacePile from 'src/components/FacePile';\nimport ChartCard from 'src/features/charts/ChartCard';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { findPermission } from 'src/utils/findPermission';\nimport { DashboardCrossLinks } from 'src/components/ListView/DashboardCrossLinks';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  a {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 1.2;\n  }\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the charts. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more charts that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\nconst registry = getChartMetadataRegistry();\n\nconst createFetchDatasets = async (\n  filterValue = '',\n  page: number,\n  pageSize: number,\n) => {\n  // add filters if filterValue\n  const filters = filterValue\n    ? { filters: [{ col: 'table_name', opr: 'sw', value: filterValue }] }\n    : {};\n  const queryParams = rison.encode({\n    columns: ['datasource_name', 'datasource_id'],\n    keys: ['none'],\n    order_column: 'table_name',\n    order_direction: 'asc',\n    page,\n    page_size: pageSize,\n    ...filters,\n  });\n\n  const { json = {} } = await SupersetClient.get({\n    endpoint: `/api/v1/dataset/?q=${queryParams}`,\n  });\n\n  const datasets = json?.result?.map(\n    ({ table_name: tableName, id }: { table_name: string; id: number }) => ({\n      label: tableName,\n      value: id,\n    }),\n  );\n\n  return {\n    data: uniqBy<SelectOption>(datasets, 'value'),\n    totalCount: json?.count,\n  };\n};\n\ninterface ChartListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst StyledActions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nfunction ChartList(props: ChartListProps) {\n  const {\n    addDangerToast,\n    addSuccessToast,\n    user: { userId },\n  } = props;\n\n  const history = useHistory();\n\n  const {\n    state: {\n      loading,\n      resourceCount: chartCount,\n      resourceCollection: charts,\n      bulkSelectEnabled,\n    },\n    setResourceCollection: setCharts,\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Chart>('chart', t('chart'), addDangerToast);\n\n  const chartIds = useMemo(() => charts.map(c => c.id), [charts]);\n  const { roles } = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const canReadTag = findPermission('can_read', 'Tag', roles);\n\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'chart',\n    chartIds,\n    addDangerToast,\n  );\n  const {\n    sliceCurrentlyEditing,\n    handleChartUpdated,\n    openChartEditModal,\n    closeChartEditModal,\n  } = useChartEditModal(setCharts, charts);\n\n  const [importingChart, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n\n  // TODO: Fix usage of localStorage keying on the user id\n  const userSettings = dangerouslyGetItemDoNotUse(userId?.toString(), null) as {\n    thumbnails: boolean;\n  };\n\n  const openChartImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeChartImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleChartImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Chart imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const handleBulkChartExport = (chartsToExport: Chart[]) => {\n    const ids = chartsToExport.map(({ id }) => id);\n    handleResourceExport('chart', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  function handleBulkChartDelete(chartsToDelete: Chart[]) {\n    SupersetClient.delete({\n      endpoint: `/api/v1/chart/?q=${rison.encode(\n        chartsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected charts: %s', errMsg),\n        ),\n      ),\n    );\n  }\n  const fetchDashboards = async (\n    filterValue = '',\n    page: number,\n    pageSize: number,\n  ) => {\n    // add filters if filterValue\n    const filters = filterValue\n      ? {\n          filters: [\n            {\n              col: 'dashboard_title',\n              opr: FilterOperator.StartsWith,\n              value: filterValue,\n            },\n          ],\n        }\n      : {};\n    const queryParams = rison.encode({\n      columns: ['dashboard_title', 'id'],\n      keys: ['none'],\n      order_column: 'dashboard_title',\n      order_direction: 'asc',\n      page,\n      page_size: pageSize,\n      ...filters,\n    });\n    const response: void | JsonResponse = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    }).catch(() =>\n      addDangerToast(t('An error occurred while fetching dashboards')),\n    );\n    const dashboards = response?.json?.result?.map(\n      ({\n        dashboard_title: dashboardTitle,\n        id,\n      }: {\n        dashboard_title: string;\n        id: number;\n      }) => ({\n        label: dashboardTitle,\n        value: id,\n      }),\n    );\n    return {\n      data: uniqBy<SelectOption>(dashboards, 'value'),\n      totalCount: response?.json?.count,\n    };\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) =>\n          userId && (\n            <FaveStar\n              itemId={id}\n              saveFaveStar={saveFavoriteStatus}\n              isStarred={favoriteStatus[id]}\n            />\n          ),\n        Header: '',\n        id: 'id',\n        disableSortBy: true,\n        size: 'xs',\n        hidden: !userId,\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              url,\n              slice_name: sliceName,\n              certified_by: certifiedBy,\n              certification_details: certificationDetails,\n              description,\n            },\n          },\n        }: any) => (\n          <FlexRowContainer>\n            <Link to={url} data-test={`${sliceName}-list-chart-title`}>\n              {certifiedBy && (\n                <>\n                  <CertifiedBadge\n                    certifiedBy={certifiedBy}\n                    details={certificationDetails}\n                  />{' '}\n                </>\n              )}\n              {sliceName}\n            </Link>\n            {description && <InfoTooltip tooltip={description} />}\n          </FlexRowContainer>\n        ),\n        Header: t('Name'),\n        accessor: 'slice_name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { viz_type: vizType },\n          },\n        }: any) => registry.get(vizType)?.name || vizType,\n        Header: t('Type'),\n        accessor: 'viz_type',\n        size: 'xxl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              datasource_name_text: dsNameTxt,\n              datasource_url: dsUrl,\n            },\n          },\n        }: any) => <GenericLink to={dsUrl}>{dsNameTxt}</GenericLink>,\n        Header: t('Dataset'),\n        accessor: 'datasource_id',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { dashboards },\n          },\n        }: any) => <DashboardCrossLinks dashboards={dashboards} />,\n        Header: t('On dashboards'),\n        accessor: 'dashboards',\n        disableSortBy: true,\n        size: 'xxl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: any) => (\n          // Only show custom type tags\n          <TagsList\n            tags={tags.filter((tag: Tag) =>\n              tag.type\n                ? tag.type === 1 || tag.type === 'TagTypes.custom'\n                : true,\n            )}\n            maxTags={3}\n          />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TaggingSystem),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        accessor: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'last_saved_at',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleChartDelete(\n              original,\n              addSuccessToast,\n              addDangerToast,\n              refreshData,\n            );\n          const openEditModal = () => openChartEditModal(original);\n          const handleExport = () => handleBulkChartExport([original]);\n          if (!canEdit && !canDelete && !canExport) {\n            return null;\n          }\n\n          return (\n            <StyledActions className=\"actions\">\n              {canDelete && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.slice_name}</b>?\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        data-test=\"trash\"\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={openEditModal}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </StyledActions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [\n      userId,\n      canEdit,\n      canDelete,\n      canExport,\n      saveFavoriteStatus,\n      favoriteStatus,\n      refreshData,\n      addSuccessToast,\n      addDangerToast,\n    ],\n  );\n\n  const favoritesFilter: Filter = useMemo(\n    () => ({\n      Header: t('Favorite'),\n      key: 'favorite',\n      id: 'id',\n      urlDisplay: 'favorite',\n      input: 'select',\n      operator: FilterOperator.ChartIsFav,\n      unfilteredLabel: t('Any'),\n      selects: [\n        { label: t('Yes'), value: true },\n        { label: t('No'), value: false },\n      ],\n    }),\n    [],\n  );\n\n  const filters: Filters = useMemo(() => {\n    const filters_list = [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'slice_name',\n        input: 'search',\n        operator: FilterOperator.ChartAllText,\n      },\n      {\n        Header: t('Type'),\n        key: 'viz_type',\n        id: 'viz_type',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('All'),\n        selects: registry\n          .keys()\n          .filter(k => nativeFilterGate(registry.get(k)?.behaviors || []))\n          .map(k => ({ label: registry.get(k)?.name || k, value: k }))\n          .sort((a, b) => {\n            if (!a.label || !b.label) {\n              return 0;\n            }\n\n            if (a.label > b.label) {\n              return 1;\n            }\n            if (a.label < b.label) {\n              return -1;\n            }\n\n            return 0;\n          }),\n      },\n      {\n        Header: t('Dataset'),\n        key: 'dataset',\n        id: 'datasource_id',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchDatasets,\n        paginate: true,\n      },\n      ...(isFeatureEnabled(FeatureFlag.TaggingSystem) && canReadTag\n        ? [\n            {\n              Header: t('Tag'),\n              key: 'tags',\n              id: 'tags',\n              input: 'select',\n              operator: FilterOperator.ChartTags,\n              unfilteredLabel: t('All'),\n              fetchSelects: loadTags,\n            },\n          ]\n        : []),\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'owners',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching chart owners values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Dashboard'),\n        key: 'dashboards',\n        id: 'dashboards',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: fetchDashboards,\n        paginate: true,\n      },\n      ...(userId ? [favoritesFilter] : []),\n      {\n        Header: t('Certified'),\n        key: 'certified',\n        id: 'id',\n        urlDisplay: 'certified',\n        input: 'select',\n        operator: FilterOperator.ChartIsCertified,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n    ] as Filters;\n    return filters_list;\n  }, [addDangerToast, favoritesFilter, props.user]);\n\n  const sortTypes = [\n    {\n      desc: false,\n      id: 'slice_name',\n      label: t('Alphabetical'),\n      value: 'alphabetical',\n    },\n    {\n      desc: true,\n      id: 'changed_on_delta_humanized',\n      label: t('Recently modified'),\n      value: 'recently_modified',\n    },\n    {\n      desc: false,\n      id: 'changed_on_delta_humanized',\n      label: t('Least recently modified'),\n      value: 'least_recently_modified',\n    },\n  ];\n\n  const renderCard = useCallback(\n    (chart: Chart) => (\n      <ChartCard\n        chart={chart}\n        showThumbnails={\n          userSettings\n            ? userSettings.thumbnails\n            : isFeatureEnabled(FeatureFlag.Thumbnails)\n        }\n        hasPerm={hasPerm}\n        openChartEditModal={openChartEditModal}\n        bulkSelectEnabled={bulkSelectEnabled}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={refreshData}\n        userId={userId}\n        loading={loading}\n        favoriteStatus={favoriteStatus[chart.id]}\n        saveFavoriteStatus={saveFavoriteStatus}\n        handleBulkChartExport={handleBulkChartExport}\n      />\n    ),\n    [\n      addDangerToast,\n      addSuccessToast,\n      bulkSelectEnabled,\n      favoriteStatus,\n      hasPerm,\n      loading,\n    ],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n  if (canDelete || canExport) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Chart')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        history.push('/chart/add');\n      },\n    });\n\n    subMenuButtons.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import charts')}\n          placement=\"bottomRight\"\n        >\n          <Icons.Import data-test=\"import-button\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openChartImportModal,\n    });\n  }\n\n  return (\n    <>\n      <SubMenu name={t('Charts')} buttons={subMenuButtons} />\n      {sliceCurrentlyEditing && (\n        <PropertiesModal\n          onHide={closeChartEditModal}\n          onSave={handleChartUpdated}\n          show\n          slice={sliceCurrentlyEditing}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected charts?')}\n        onConfirm={handleBulkChartDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkChartExport,\n            });\n          }\n          return (\n            <ListView<Chart>\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              cardSortSelectOptions={sortTypes}\n              className=\"chart-list-view\"\n              columns={columns}\n              count={chartCount}\n              data={charts}\n              disableBulkSelect={toggleBulkSelect}\n              refreshData={refreshData}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              renderCard={renderCard}\n              enableBulkTag\n              bulkTagResourceName=\"chart\"\n              addSuccessToast={addSuccessToast}\n              addDangerToast={addDangerToast}\n              showThumbnails={\n                userSettings\n                  ? userSettings.thumbnails\n                  : isFeatureEnabled(FeatureFlag.Thumbnails)\n              }\n              defaultViewMode={\n                isFeatureEnabled(FeatureFlag.ListviewsDefaultCardView)\n                  ? 'card'\n                  : 'table'\n              }\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"chart\"\n        resourceLabel={t('chart')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleChartImport}\n        show={importingChart}\n        onHide={closeChartImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(ChartList);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n","\"use strict\";\nexports.ITEM_TYPES = {\n    PAGE: 'PAGE',\n    ELLIPSIS: 'ELLIPSIS',\n    FIRST_PAGE_LINK: 'FIRST_PAGE_LINK',\n    PREVIOUS_PAGE_LINK: 'PREVIOUS_PAGE_LINK',\n    NEXT_PAGE_LINK: 'NEXT_PAGE_LINK',\n    LAST_PAGE_LINK: 'LAST_PAGE_LINK'\n};\nexports.ITEM_KEYS = {\n    FIRST_ELLIPSIS: -1,\n    SECOND_ELLIPSIS: -2,\n    FIRST_PAGE_LINK: -3,\n    PREVIOUS_PAGE_LINK: -4,\n    NEXT_PAGE_LINK: -5,\n    LAST_PAGE_LINK: -6\n};\n//# sourceMappingURL=ultimate-pagination-constants.js.map","\"use strict\";\nvar ultimate_pagination_constants_1 = require(\"./ultimate-pagination-constants\");\nexports.createFirstEllipsis = function (pageNumber) {\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.ELLIPSIS,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.FIRST_ELLIPSIS,\n        value: pageNumber,\n        isActive: false\n    };\n};\nexports.createSecondEllipsis = function (pageNumber) {\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.ELLIPSIS,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.SECOND_ELLIPSIS,\n        value: pageNumber,\n        isActive: false\n    };\n};\nexports.createFirstPageLink = function (options) {\n    var currentPage = options.currentPage;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.FIRST_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.FIRST_PAGE_LINK,\n        value: 1,\n        isActive: currentPage === 1\n    };\n};\nexports.createPreviousPageLink = function (options) {\n    var currentPage = options.currentPage;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.PREVIOUS_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.PREVIOUS_PAGE_LINK,\n        value: Math.max(1, currentPage - 1),\n        isActive: currentPage === 1\n    };\n};\nexports.createNextPageLink = function (options) {\n    var currentPage = options.currentPage, totalPages = options.totalPages;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.NEXT_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.NEXT_PAGE_LINK,\n        value: Math.min(totalPages, currentPage + 1),\n        isActive: currentPage === totalPages\n    };\n};\nexports.createLastPageLink = function (options) {\n    var currentPage = options.currentPage, totalPages = options.totalPages;\n    return {\n        type: ultimate_pagination_constants_1.ITEM_TYPES.LAST_PAGE_LINK,\n        key: ultimate_pagination_constants_1.ITEM_KEYS.LAST_PAGE_LINK,\n        value: totalPages,\n        isActive: currentPage === totalPages\n    };\n};\nexports.createPageFunctionFactory = function (options) {\n    var currentPage = options.currentPage;\n    return function (pageNumber) {\n        return {\n            type: ultimate_pagination_constants_1.ITEM_TYPES.PAGE,\n            key: pageNumber,\n            value: pageNumber,\n            isActive: pageNumber === currentPage\n        };\n    };\n};\n//# sourceMappingURL=ultimate-pagination-item-factories.js.map","\"use strict\";\nfunction createRange(start, end) {\n    var range = [];\n    for (var i = start; i <= end; i++) {\n        range.push(i);\n    }\n    return range;\n}\nexports.createRange = createRange;\n//# sourceMappingURL=ultimate-pagination-utils.js.map","\"use strict\";\nvar ultimate_pagination_utils_1 = require(\"./ultimate-pagination-utils\");\nvar ultimate_pagination_item_factories_1 = require(\"./ultimate-pagination-item-factories\");\nfunction getPaginationModel(options) {\n    if (options == null) {\n        throw new Error('getPaginationModel(): options object should be a passed');\n    }\n    var totalPages = Number(options.totalPages);\n    if (isNaN(totalPages)) {\n        throw new Error('getPaginationModel(): totalPages should be a number');\n    }\n    if (totalPages < 0) {\n        throw new Error('getPaginationModel(): totalPages shouldn\\'t be a negative number');\n    }\n    var currentPage = Number(options.currentPage);\n    if (isNaN(currentPage)) {\n        throw new Error('getPaginationModel(): currentPage should be a number');\n    }\n    if (currentPage < 0) {\n        throw new Error('getPaginationModel(): currentPage shouldn\\'t be a negative number');\n    }\n    if (currentPage > totalPages) {\n        throw new Error('getPaginationModel(): currentPage shouldn\\'t be greater than totalPages');\n    }\n    var boundaryPagesRange = (options.boundaryPagesRange == null ? 1 : Number(options.boundaryPagesRange));\n    if (isNaN(boundaryPagesRange)) {\n        throw new Error('getPaginationModel(): boundaryPagesRange should be a number');\n    }\n    if (boundaryPagesRange < 0) {\n        throw new Error('getPaginationModel(): boundaryPagesRange shouldn\\'t be a negative number');\n    }\n    var siblingPagesRange = (options.siblingPagesRange == null ? 1 : Number(options.siblingPagesRange));\n    if (isNaN(siblingPagesRange)) {\n        throw new Error('getPaginationModel(): siblingPagesRange should be a number');\n    }\n    if (siblingPagesRange < 0) {\n        throw new Error('getPaginationModel(): siblingPagesRange shouldn\\'t be a negative number');\n    }\n    var hidePreviousAndNextPageLinks = Boolean(options.hidePreviousAndNextPageLinks);\n    var hideFirstAndLastPageLinks = Boolean(options.hideFirstAndLastPageLinks);\n    var hideEllipsis = Boolean(options.hideEllipsis);\n    var ellipsisSize = (hideEllipsis ? 0 : 1);\n    var paginationModel = [];\n    var createPage = ultimate_pagination_item_factories_1.createPageFunctionFactory(options);\n    if (!hideFirstAndLastPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createFirstPageLink(options));\n    }\n    if (!hidePreviousAndNextPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createPreviousPageLink(options));\n    }\n    // Simplify generation of pages if number of available items is equal or greater than total pages to show\n    if (1 + 2 * ellipsisSize + 2 * siblingPagesRange + 2 * boundaryPagesRange >= totalPages) {\n        var allPages = ultimate_pagination_utils_1.createRange(1, totalPages).map(createPage);\n        paginationModel.push.apply(paginationModel, allPages);\n    }\n    else {\n        // Calculate group of first pages\n        var firstPagesStart = 1;\n        var firstPagesEnd = boundaryPagesRange;\n        var firstPages = ultimate_pagination_utils_1.createRange(firstPagesStart, firstPagesEnd).map(createPage);\n        // Calculate group of last pages\n        var lastPagesStart = totalPages + 1 - boundaryPagesRange;\n        var lastPagesEnd = totalPages;\n        var lastPages = ultimate_pagination_utils_1.createRange(lastPagesStart, lastPagesEnd).map(createPage);\n        // Calculate group of main pages\n        var mainPagesStart = Math.min(Math.max(currentPage - siblingPagesRange, firstPagesEnd + ellipsisSize + 1), lastPagesStart - ellipsisSize - 2 * siblingPagesRange - 1);\n        var mainPagesEnd = mainPagesStart + 2 * siblingPagesRange;\n        var mainPages = ultimate_pagination_utils_1.createRange(mainPagesStart, mainPagesEnd).map(createPage);\n        // Add group of first pages\n        paginationModel.push.apply(paginationModel, firstPages);\n        if (!hideEllipsis) {\n            // Calculate and add ellipsis before group of main pages\n            var firstEllipsisPageNumber = mainPagesStart - 1;\n            var showPageInsteadOfFirstEllipsis = (firstEllipsisPageNumber === firstPagesEnd + 1);\n            var createFirstEllipsisOrPage = showPageInsteadOfFirstEllipsis ? createPage : ultimate_pagination_item_factories_1.createFirstEllipsis;\n            var firstEllipsis = createFirstEllipsisOrPage(firstEllipsisPageNumber);\n            paginationModel.push(firstEllipsis);\n        }\n        // Add group of main pages\n        paginationModel.push.apply(paginationModel, mainPages);\n        if (!hideEllipsis) {\n            // Calculate and add ellipsis after group of main pages\n            var secondEllipsisPageNumber = mainPagesEnd + 1;\n            var showPageInsteadOfSecondEllipsis = (secondEllipsisPageNumber === lastPagesStart - 1);\n            var createSecondEllipsisOrPage = showPageInsteadOfSecondEllipsis ? createPage : ultimate_pagination_item_factories_1.createSecondEllipsis;\n            var secondEllipsis = createSecondEllipsisOrPage(secondEllipsisPageNumber);\n            paginationModel.push(secondEllipsis);\n        }\n        // Add group of last pages\n        paginationModel.push.apply(paginationModel, lastPages);\n    }\n    if (!hidePreviousAndNextPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createNextPageLink(options));\n    }\n    if (!hideFirstAndLastPageLinks) {\n        paginationModel.push(ultimate_pagination_item_factories_1.createLastPageLink(options));\n    }\n    return paginationModel;\n}\nexports.getPaginationModel = getPaginationModel;\nvar ultimate_pagination_constants_1 = require(\"./ultimate-pagination-constants\");\nexports.ITEM_TYPES = ultimate_pagination_constants_1.ITEM_TYPES;\nexports.ITEM_KEYS = ultimate_pagination_constants_1.ITEM_KEYS;\n//# sourceMappingURL=ultimate-pagination.js.map"],"names":["baseIteratee","baseUniq","module","exports","array","iteratee","length","undefined","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","_react2","_interopRequireDefault","_propTypes2","_ultimatePagination","obj","__esModule","default","_ref2","itemTypeToComponent","_ref2$WrapperComponen","WrapperComponent","UltimatePaginationComponent","props","currentPage","totalPages","boundaryPagesRange","siblingPagesRange","hideEllipsis","hidePreviousAndNextPageLinks","hideFirstAndLastPageLinks","onChange","disabled","restProps","keys","indexOf","_objectWithoutProperties","paginationModel","getPaginationModel","renderItemComponent","_ref","value","isDisabled","ItemComponent","type","onItemClick","createElement","onClick","renderItemComponentFunctionFactory","map","itemModel","propTypes","number","isRequired","bool","func","ITEM_TYPES","useChildElementTruncation","elementsTruncated","setElementsTruncated","useState","hasHiddenElements","setHasHiddenElements","elementRef","useRef","plusRef","useLayoutEffect","_elementRef$current","onResize","currentElement","current","plusRefElement","scrollWidth","clientWidth","childNodes","truncationWidth","plusSize","offsetWidth","maxWidth","elementsCount","width","hiddenElements","obs","ResizeObserver","element","parentElement","observe","disconnect","ModifiedInfo","user","date","dateSpan","___EmotionJSX","className","userName","getOwnerName","title","t","Tooltip","placement","HelperMessage","styled","div","theme","colors","grayscale","base","typography","sizes","s","StyledInputContainer","gridUnit","light1","light2","ImportModelsModal","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","isHidden","setIsHidden","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","sshTunnelPasswords","setSSHTunnelPasswords","sshTunnelPrivateKeys","setSSHTunnelPrivateKeys","sshTunnelPrivateKeyPasswords","setSSHTunnelPrivateKeyPasswords","clearModal","state","alreadyExists","passwordsNeeded","sshPasswordNeeded","sshPrivateKeyNeeded","sshPrivateKeyPasswordNeeded","importResource","useImportResource","msg","useEffect","Modal","name","disablePrimaryButton","onHandledPrimaryAction","onUpload","_fileList$","originFileObj","File","then","result","hide","primaryButtonName","primaryButtonType","Upload","id","accept","info","file","status","onRemove","removedFile","filter","uid","customRequest","Button","loading","ErrorAlert","showDbInstallInstructions","renderPasswordFields","files","Set","React","fileName","slice","autoComplete","event","_event$currentTarget$","_event$currentTarget","targetValue","currentTarget","toUpperCase","StyledTag","AntdTag","Tag","index","onDelete","editable","toolTipTitle","tagDisplay","useMemo","closable","onClose","handleClose","color","role","href","rel","TagsDiv","TagsList","tags","maxTags","tempMaxTags","setTempMaxTags","handleDelete","tagsIsLong","extraTags","tag","expand","join","collapse","getDefaultRowLimit","_bootstrapData$common","_bootstrapData$common2","bootstrapData","getBootstrapData","common","conf","NATIVE_FILTER_DEFAULT_ROW_LIMIT","getFormData","datasetId","dependencies","groupby","defaultDataMask","controlValues","filterType","sortMetric","adhoc_filters","time_range","granularity_sqla","dashboardId","_defaultDataMask$filt","otherProps","datasource","extra_filters","extra_form_data","metrics","row_limit","showSearch","defaultValue","filterState","url_params","extractUrlParams","inView","viz_type","native_filter_id","mergeExtraFormData","originalExtra","newExtra","mergedExtra","EXTRA_FORM_DATA_APPEND_KEYS","forEach","mergedValues","EXTRA_FORM_DATA_OVERRIDE_KEYS","originalValue","newValue","getExtraFormData","dataMask","filterIdsAppliedOnChart","extraFormData","_dataMask$key$extraFo","_dataMask$key","nativeFilterGate","behaviors","includes","Behavior","NativeFilter","isFeatureEnabled","FeatureFlag","DashboardCrossFilters","InteractiveChart","isComponentATab","dashboardLayout","componentId","_dashboardLayout$comp","TAB_TYPE","findTabsWithChartsInScopeHelper","chartsInScope","tabIds","tabsToHighlight","visited","_dashboardLayout$comp2","_dashboardLayout$comp3","_dashboardLayout$comp4","_dashboardLayout$comp5","_dashboardLayout$comp6","_dashboardLayout$comp7","has","add","CHART_TYPE","meta","chartId","children","childId","findTabsWithChartsInScope","rootChildId","DASHBOARD_ROOT_ID","hasTopLevelTabs","DASHBOARD_GRID_ID","tabsInScope","_dashboardLayout$root","_dashboardLayout$root2","tabId","values","getFilterValueForDisplay","Array","isArray","JSON","stringify","StyledLinkedTooltip","light5","CrossLinksTooltip","crossLinks","moreItems","link","Link","to","StyledCrossLinks","weights","bold","CrossLinks","maxLinks","linkPrefix","crossLinksRef","useTruncation","hasMoreItems","links","ref","tooltipLinks","l","DashboardCrossLinks","dashboards","ensureIsArray","d","dashboard_title","FlexRowContainer","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","registry","getChartMetadataRegistry","createFetchDatasets","async","filterValue","page","pageSize","_json$result","filters","col","opr","queryParams","rison","columns","order_column","order_direction","page_size","json","SupersetClient","get","endpoint","datasets","table_name","tableName","label","data","_uniqBy","totalCount","count","StyledActions","withToasts","addDangerToast","addSuccessToast","userId","history","useHistory","resourceCount","chartCount","resourceCollection","charts","bulkSelectEnabled","setResourceCollection","setCharts","hasPerm","fetchData","toggleBulkSelect","refreshData","useListViewResource","chartIds","c","roles","useSelector","canReadTag","findPermission","saveFavoriteStatus","favoriteStatus","useFavoriteStatus","sliceCurrentlyEditing","handleChartUpdated","openChartEditModal","closeChartEditModal","useChartEditModal","importingChart","showImportModal","preparingExport","setPreparingExport","userSettings","dangerouslyGetItemDoNotUse","toString","canCreate","canEdit","canDelete","canExport","initialSort","desc","handleBulkChartExport","chartsToExport","ids","handleResourceExport","fetchDashboards","_response$json","_response$json$result","_response$json2","FilterOperator","StartsWith","response","catch","dashboardTitle","Cell","row","original","FaveStar","itemId","saveFaveStar","isStarred","Header","disableSortBy","size","hidden","url","slice_name","sliceName","certified_by","certifiedBy","certification_details","certificationDetails","description","CertifiedBadge","details","InfoTooltip","tooltip","accessor","vizType","_registry$get","datasource_name_text","dsNameTxt","datasource_url","dsUrl","GenericLink","TaggingSystem","owners","FacePile","users","changed_on_delta_humanized","changedOn","changed_by","changedBy","ConfirmStatusChange","onConfirm","handleChartDelete","confirmDelete","tabIndex","Icons","Trash","handleExport","Share","openEditModal","EditAlt","QueryObjectColumns","ChangedBy","favoritesFilter","urlDisplay","input","operator","ChartIsFav","unfilteredLabel","selects","ChartAllText","Equals","k","_registry$get2","_registry$get3","sort","a","b","fetchSelects","paginate","ChartTags","loadTags","RelationManyMany","createFetchRelated","createErrorHandler","errMsg","ChartIsCertified","RelationOneMany","sortTypes","renderCard","useCallback","chart","ChartCard","showThumbnails","thumbnails","Thumbnails","subMenuButtons","push","buttonStyle","Import","openChartImportModal","SubMenu","buttons","PropertiesModal","onSave","chartsToDelete","delete","message","bulkActions","onSelect","ListView","cardSortSelectOptions","disableBulkSelect","enableBulkTag","bulkTagResourceName","defaultViewMode","ListviewsDefaultCardView","handleChartImport","closeChartImportModal","Loading","owner","first_name","last_name","PAGE","ELLIPSIS","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","NEXT_PAGE_LINK","LAST_PAGE_LINK","ITEM_KEYS","FIRST_ELLIPSIS","SECOND_ELLIPSIS","ultimate_pagination_constants_1","createFirstEllipsis","pageNumber","isActive","createSecondEllipsis","createFirstPageLink","options","createPreviousPageLink","Math","max","createNextPageLink","min","createLastPageLink","createPageFunctionFactory","createRange","start","end","range","ultimate_pagination_utils_1","ultimate_pagination_item_factories_1","Error","Number","isNaN","Boolean","ellipsisSize","createPage","allPages","apply","firstPagesEnd","firstPages","lastPagesStart","lastPagesEnd","lastPages","mainPagesStart","mainPagesEnd","mainPages","firstEllipsisPageNumber","firstEllipsis","secondEllipsisPageNumber","secondEllipsis"],"sourceRoot":""}